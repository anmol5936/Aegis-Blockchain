{
  "contractName": "PoolFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "regionName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newStakingToken",
          "type": "address"
        }
      ],
      "name": "StakingTokenUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolToRegion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "regionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "regionToPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stakingTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_regionName",
          "type": "string"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getPoolCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_regionName",
          "type": "string"
        }
      ],
      "name": "getPoolByRegion",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingTokenAddress",
          "type": "address"
        }
      ],
      "name": "setStakingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "togglePoolStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addRewardsToPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"regionName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStakingToken\",\"type\":\"address\"}],\"name\":\"StakingTokenUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewardsToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regionName\",\"type\":\"string\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_regionName\",\"type\":\"string\"}],\"name\":\"getPoolByRegion\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolToRegion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"regionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"regionToPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingTokenAddress\",\"type\":\"address\"}],\"name\":\"setStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"togglePoolStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract for creating and managing regional liquidity pools\",\"kind\":\"dev\",\"methods\":{\"addRewardsToPool(address,uint256)\":{\"details\":\"Add rewards to a specific pool's reward pot\"},\"createPool(string)\":{\"details\":\"Creates a new liquidity pool for a region\",\"params\":{\"_regionName\":\"Name of the region for the pool\"}},\"getPoolByRegion(string)\":{\"details\":\"Returns pool address for a specific region\"},\"getPoolCount()\":{\"details\":\"Returns the number of deployed pools\"},\"getPools()\":{\"details\":\"Returns all deployed pool addresses\"},\"setStakingToken(address)\":{\"details\":\"Updates the global staking token address\"},\"togglePoolStatus(address)\":{\"details\":\"Emergency function to pause/unpause a specific pool\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the factory\"}},\"title\":\"PoolFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PoolFactory.sol\":\"PoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/IERC20.sol\":{\"keccak256\":\"0x4f409824c427bf7886c93cfeb3f383bd1ef605d94f43e9d985dd574cda88821f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78a17d6be0ee3162513379736aed7c26ef3e902d7866b9d85eb16f747f2718c\",\"dweb:/ipfs/QmQXjkoUf4YRg22s4qwPrkxMSSojA7cPuh2xWynkDs4Exk\"]},\"project:/contracts/LPERC20.sol\":{\"keccak256\":\"0x8bc94f1dd06af35be8d279ff50961cc263aa80dca14b04e401fef45166b9f1c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ec9a6275c064694cf4cc77b71f1d7dcaa80bc44ae619c23bfb4d4319725fe0a\",\"dweb:/ipfs/QmWLfHW7QcSr93CSKiiCe9fVVvdqcqMMNvMyZmtCTWnYis\"]},\"project:/contracts/LiquidityPool.sol\":{\"keccak256\":\"0xd7414592b7b468eed3776fe18cd5175d152f5d8c45a78a3a13348a12b5a5152b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b26513742d539646d1b2d9ebbd9d8c56ea55bc8a7aa1fd489d0a365db7bd91a5\",\"dweb:/ipfs/QmWbCjPbmZBykwWJvvvJ4Z6oq9uaUCEgU7wsePsSS1j8WT\"]},\"project:/contracts/PoolFactory.sol\":{\"keccak256\":\"0x3e74d6e406bd88498f4ac9c950c9c8e24d1cb32c84467f073da94af1ce70f55d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6919bae0d398f4a0063d4dd8451afc57c93d377a233c2607da28f2209cf2ad57\",\"dweb:/ipfs/QmVgdpv2m5gzHWm6yr8AqBYrYqexksCum8rtNyyMKTAqa6\"]}},\"version\":1}",
  "bytecode": "0x608034607e57601f6152c838819003918201601f19168301916001600160401b03831184841017608357808492602094604052833981010312607e57516001600160a01b03811690819003607e57600080546001600160a01b031990811633179091556002805490911691909117905560405161522e908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c806301d4860514610ba75780631e9b12ef14610ae15780632e641b5a1461094c57806345a79e26146108ad5780635298b869146108845780636282d7ec14610799578063673a2a1f146106d15780638da5cb5b146106aa5780638eec5d701461068c578063996eebbd14610645578063ac4afa3814610601578063d0d130361461020f578063d5fe55c2146101625763f2fde38b146100b757600080fd5b3461015f57602036600319011261015f576100d0610cc0565b8154906100e7336001600160a01b03841614610d66565b6001600160a01b0316908115610107576001600160a01b03191617815580f35b60405162461bcd60e51b815260206004820152602a60248201527f506f6f6c466163746f72793a206e6577206f776e657220697320746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b80fd5b503461015f57602036600319011261015f578061017d610cc0565b61019160018060a01b038354163314610d66565b6001600160a01b03166101a5811515610dbe565b80825260046020526101c46101bd6040842054610cd6565b1515610e14565b803b1561020c5781809160046040518094819363c02857bd60e01b83525af18015610201576101f05750f35b816101fa91610be7565b61015f5780f35b6040513d84823e3d90fd5b50fd5b503461015f5761021e36610c1f565b81546001600160a01b03169190610236338414610d66565b8051156105ab576040519260ff8251946020818186019761025881838b610c9d565b81016003815203019020541661055b576002546001600160a01b031690811561050b5760405191614398908184019184831067ffffffffffffffff8411176104f7579084939291610e618539608082526102b56080830187610d10565b9260208301526040820152606030910152039083f080156102015760018060a01b0316600154680100000000000000008110156104e3578060016102fc9201600155610d35565b81549060031b9083821b9160018060a01b03901b1916179055604051602081845161032881838a610c9d565b81016003815203019020600160ff198254161790558083526004602052604083209382519467ffffffffffffffff86116104cf576103668154610cd6565b601f811161048a575b50602095601f81116001146104215790816020939287986103b796979891610416575b508160011b916000199060031b1c19161790555b604051809381928751928391610c9d565b81016005815203019020816bffffffffffffffffffffffff60a01b8254161790557f8f593eb1efa9325b878783797a652bd79616978dc4d101da8c0c04df88b39808604051602081528061041033956020830190610d10565b0390a380f35b905087015138610392565b818652868620601f198216875b8181106104725750916001916103b79697989982602097969510610459575b5050811b0190556103a6565b89015160001960f88460031b161c19169055388061044d565b878a015183556020998a01996001909301920161042e565b81865260208620601f880160051c810191602089106104c5575b601f0160051c01905b8181106104ba575061036f565b8681556001016104ad565b90915081906104a4565b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a207374616b696e6720746f6b656e206e6f742073604482015261195d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20726567696f6e20616c72656164792065786973604482015261747360f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f506f6f6c466163746f72793a20726567696f6e206e616d652063616e6e6f7420604482015267626520656d70747960c01b6064820152608490fd5b503461015f57602036600319011261015f576004359060015482101561015f57602061062c83610d35565b905460405160039290921b1c6001600160a01b03168152f35b503461015f57602061065636610c1f565b8161066a6040519283815193849201610c9d565b600590820190815281900382019020546040516001600160a01b039091168152f35b503461015f578060031936011261015f576020600154604051908152f35b503461015f578060031936011261015f57546040516001600160a01b039091168152602090f35b503461015f578060031936011261015f5760405180602060015491828152018091600185527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690855b81811061077a5750505082610730910383610be7565b604051928392602084019060208552518091526040840192915b818110610758575050500390f35b82516001600160a01b031684528594506020938401939092019160010161074a565b82546001600160a01b031684526020909301926001928301920161071a565b503461015f57602036600319011261015f576001600160a01b036107bb610cc0565b1681526004602052604081209060405191818154916107d983610cd6565b808652926001811690811561085a5750600114610819575b6108158561080181870382610be7565b604051918291602083526020830190610d10565b0390f35b815260208120939250905b80821061084057509091508101602001610801826108156107f1565b919260018160209254838588010152019101909291610824565b8695506108159693506020925061080194915060ff191682840152151560051b82010192936107f1565b503461015f578060031936011261015f576002546040516001600160a01b039091168152602090f35b503461015f576108bc36610c1f565b60405160ff825191602081818601946108d6818388610c9d565b810160038152030190205416156108fc5760209161066a60405192839251928391610c9d565b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20726567696f6e20646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b503461015f57604036600319011261015f57610966610cc0565b6024359061097e60018060a01b038454163314610d66565b6001600160a01b0316610992811515610dbe565b80835260046020526109aa6101bd6040852054610cd6565b8115610a8957829182602060018060a01b03600254166064604051809481936323b872dd60e01b83523360048401528860248401528760448401525af18015610a7e57610a45575b50813b15610a4157829160248392604051958693849263054f713360e31b845260048401525af18015610a3457610a265780f35b610a2f91610be7565b388180f35b50604051903d90823e3d90fd5b5050fd5b6020813d602011610a76575b81610a5e60209383610be7565b81010312610a71575180151581146109f2575b505050fd5b3d9150610a51565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152602a60248201527f506f6f6c466163746f72793a20616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608490fd5b503461015f57602036600319011261015f57610afb610cc0565b610b0f60018060a01b038354163314610d66565b6001600160a01b03168015610b5757600280546001600160a01b031916821790557f08d9e26510a3cb1d512e4122208b8399da71fdde379ed7801f26cc073be0cad28280a280f35b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20696e76616c696420746f6b656e206164647265604482015261737360f01b6064820152608490fd5b503461015f57602060ff610bd182610bbe36610c1f565b8160405193828580945193849201610c9d565b8101600381520301902054166040519015158152f35b90601f8019910116810190811067ffffffffffffffff821117610c0957604052565b634e487b7160e01b600052604160045260246000fd5b6020600319820112610c985760043567ffffffffffffffff8111610c985781602382011215610c985780600401359067ffffffffffffffff8211610c095760405192610c75601f8401601f191660200185610be7565b82845260248383010111610c985781600092602460209301838601378301015290565b600080fd5b60005b838110610cb05750506000910152565b8181015183820152602001610ca0565b600435906001600160a01b0382168203610c9857565b90600182811c92168015610d06575b6020831014610cf057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ce5565b90602091610d2981518092818552858086019101610c9d565b601f01601f1916010190565b600154811015610d5057600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b15610d6d57565b60405162461bcd60e51b8152602060048201526024808201527f506f6f6c466163746f72793a2063616c6c6572206973206e6f7420746865206f6044820152633bb732b960e11b6064820152608490fd5b15610dc557565b60405162461bcd60e51b815260206004820152602160248201527f506f6f6c466163746f72793a20696e76616c696420706f6f6c206164647265736044820152607360f81b6064820152608490fd5b15610e1b57565b60405162461bcd60e51b815260206004820152601b60248201527f506f6f6c466163746f72793a20706f6f6c206e6f7420666f756e6400000000006044820152606490fdfe60c080604052346103cd57614398803803809161001c82856103d2565b833981016080828203126103cd5781516001600160401b0381116103cd57820181601f820112156103cd578051906001600160401b0382116102b85760405191610070601f8201601f1916602001846103d2565b8083526020830193602082840101116103cd5783602061009093016103f5565b61009c60208401610418565b926100b560606100ae60408401610418565b9201610418565b6101f46006558251946001600160401b0386116102b857600054600181811c911680156103c3575b60208210146103ad57601f8111610349575b50602095601f81116001146102d9579160249391836101bd96946101ac996000916102ce575b508160011b916000199060031b1c1916176000555b60805260a05260018060a01b031660018060a01b0319600154161760015560ff1960045416600455604051936741656769734c502d60c01b602086015261018d602886845161017c81848401876103f5565b81010301601f1981018752866103d2565b60405195869263414c502d60e01b6020850152518092858501906103f5565b81010301601f1981018452836103d2565b60405191610e8291828401916001600160401b038311858410176102b8576101f7610205928695613516873960608552606085019061042c565b90838203602085015261042c565b9060403091015203906000f080156102ac57600280546001600160a01b0319166001600160a01b03929092169190911790556040516130c4908161045282396080518181816102430152818161041501528181610d85015281816110ee0152818161117d015281816115270152611861015260a0518181816109860152818161113301528181611350015281816118e4015281816124080152818161265e01526128d70152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b905085015138610115565b601f19811660008052876000209060005b81811061033157508260249694926101ac9a6101bd99979560019410610318575b5050811b0160005561012a565b87015160001960f88460031b161c19169055388061030b565b878a015183556020998a0199600190930192016102ea565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f880160051c810191602089106103a3575b601f0160051c01905b81811061039757506100ef565b6000815560010161038a565b9091508190610381565b634e487b7160e01b600052602260045260246000fd5b90607f16906100dd565b600080fd5b601f909101601f19168101906001600160401b038211908210176102b857604052565b60005b8381106104085750506000910152565b81810151838201526020016103f8565b51906001600160a01b03821682036103cd57565b90602091610445815180928185528580860191016103f5565b601f01601f191601019056fe6080604052600436101561001257600080fd5b6000803560e01c8063015cb0a514611c955780630328c7b514611b875780630ff3420114611b01578063117f910d146119c757806315770f92146101f55780631a28b995146118b3578063200d2ed21461083b5780632a7b8998146118235780632e17de78146115995780632e49d78b146115035780632fdfbb3a1461130557806334ce998a146112e7578063365e84d51461125657806336e2af731461121d5780633b3f5e36146111625780633bcfc4b8146107c15780634219dc401461111d5780634273601c146110d85780634a3a743f14610f8c5780634da6a55614610f5357806357a27ced14610f365780635fcbd28514610f0d5780636f4a2cd014610d6e57806372f702f314610d455780637404a1fd14610d27578063748b298b14610cfb57806378c8390c14610bc057806379c94ac6146109025780637a766460146108655780637f79496c1461083b5780639168ae72146107df57806393a6983d146107c1578063a694fc3a1461050f578063bb9f661c146104cc578063c02857bd146103fe578063c2dbcb14146103e0578063db2e21bc14610230578063e1f1c4a714610213578063e86f6a0d146101f55763fc7b9c18146101d557600080fd5b346101f257806003193601126101f2576020600754604051908152f35b80fd5b50346101f257806003193601126101f2576020600354604051908152f35b50346101f257806003193601126101f25760206040516127108152f35b50346101f257806003193601126101f2577f0000000000000000000000000000000000000000000000000000000000000000610276336001600160a01b03831614612244565b60ff6004541660038110156103cc5760020361038f576001546040516370a0823160e01b81523060048201526001600160a01b039091169190602081602481865afa90811561038457849161034d575b50806102d0578380f35b60405163a9059cbb60e01b81526001600160a01b039290921660048301526024820152906020908290604490829086905af1801561034257610313575b80808380f35b6103349060203d60201161033b575b61032c8183611fd2565b810190612108565b503861030d565b503d610322565b6040513d84823e3d90fd5b90506020813d60201161037c575b8161036860209383611fd2565b810103126103775751386102c6565b600080fd5b3d915061035b565b6040513d86823e3d90fd5b60405162461bcd60e51b8152602060048201526015602482015274506f6f6c206d75737420626520696e61637469766560581b6044820152606490fd5b634e487b7160e01b83526021600452602483fd5b50346101f257806003193601126101f2576020604051620151808152f35b50346101f257806003193601126101f257610443337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff6004541660038110156104b857806104a25750600160ff1960045416176004555b7fe2331ea4aa77bd9050f22ec79661d3d41e161cd0fc67a06e3679fedf8a3a1cfa61049c60ff6004541660405191829182611ff4565b0390a180f35b6001036104665760ff1960045416600455610466565b634e487b7160e01b82526021600452602482fd5b50346101f25760403660031901126101f2576104e6611f6e565b60ff6004541660038110156103cc579061050361050c9215612089565b6024359061255b565b80f35b50346101f25760203660031901126101f25760043560ff6004541660038110156103cc5761053d9015612089565b801561054981156120c7565b6001546040516323b872dd60e01b815233600482015230602482015260448101849052906020908290606490829088906001600160a01b03165af180156103845761059b9185916107a2575b50612348565b6107d08202908282046107d014171561078e576002546040516318160ddd60e01b81526001600160a01b0390911690602081600481855afa908115610783578591610751575b506106da575081905b3384526008602052604084209061060284835461216f565b8255610617612710600184019204825461216f565b90556002810161062883825461216f565b905560034291015561063c8260035461216f565b60035560025483906001600160a01b0316803b156106d6576040516340c10f1960e01b8152336004820152602481018490529082908290604490829084905af18015610342576106bd575b505060405191825260208201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060403392a280f35b816106c791611fd2565b6106d2578238610687565b8280fd5b5080fd5b6020600491604051928380926318160ddd60e01b82525afa90811561038457849161071d575b5061070e61071791846122c9565b600354906122dc565b906105ea565b90506020813d602011610749575b8161073860209383611fd2565b81010312610377575161070e610700565b3d915061072b565b90506020813d60201161077b575b8161076c60209383611fd2565b810103126103775751386105e1565b3d915061075f565b6040513d87823e3d90fd5b634e487b7160e01b83526011600452602483fd5b6107bb915060203d60201161033b5761032c8183611fd2565b38610595565b50346101f257806003193601126101f2576020600654604051908152f35b50346101f25760203660031901126101f2576080906040906001600160a01b03610807611f6e565b1681526008602052208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b50346101f257806003193601126101f25761086160ff6004541660405191829182611ff4565b0390f35b50346101f25760203660031901126101f2576040608091610884611f6e565b816060845161089281611fb6565b8281528260208201528286820152015260018060a01b031681526008602052206040516108be81611fb6565b815491828252600181015460208301908152606060036002840154936040860194855201549301928352604051938452516020840152516040830152516060820152f35b50346101f2576109113661201d565b919061091e33151561217c565b6109298315156120c7565b61093783600354101561238c565b6001600160a01b03168352600860205260408320546107d08082029180159083049091141715610bac5782612710610971920410156122fc565b60405163673a2a1f60e01b81529183836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610384578493610b88575b508392845b8151811015610b7f57336001600160a01b036109df838561215b565b5116148015610b5a575b6109f5576001016109c3565b505090915060015b15610b155760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091602091839160449183918991165af1908115610384578491610af6575b5015610ab1578291610a5c82600354612120565b6003556001600160a01b031690813b15610aad578291602483926040519485938492631a28b99560e01b845260048401525af1801561034257610a9c5750f35b81610aa691611fd2565b6101f25780f35b5050fd5b60405162461bcd60e51b815260206004820152601c60248201527f436f6e747269627574696f6e207472616e73666572206661696c6564000000006044820152606490fd5b610b0f915060203d60201161033b5761032c8183611fd2565b38610a48565b60405162461bcd60e51b815260206004820152601960248201527f556e617574686f72697a656420636f6e747269627574696f6e000000000000006044820152606490fd5b506001600160a01b03610b6d828461215b565b51166001600160a01b038516146109e9565b505090916109fd565b610ba59193503d8086833e610b9d8183611fd2565b8101906121b9565b91386109be565b634e487b7160e01b84526011600452602484fd5b50346101f25760203660031901126101f2576001600160a01b03610be2611f6e565b1681526009602052604081208054610bf981612143565b90610c076040519283611fd2565b80825260208201809385526020852085915b838310610c9d57868587604051928392602084019060208552518091526040840192915b818110610c4b575050500390f35b91935091602060a0600192608087518580851b0381511683528580851b038582015116858401526040810151604084015260608101516060840152015115156080820152019401910191849392610c3d565b60056020600192604051610cb081611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190610c19565b50346101f25760203660031901126101f2576020610d1f610d1a611f6e565b6123d1565b604051908152f35b50346101f257806003193601126101f2576020600554604051908152f35b50346101f257806003193601126101f2576001546040516001600160a01b039091168152602090f35b50346101f257806003193601126101f257610db3337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff6004541660038110156104b857610dcc9015612089565b6005548015610ec8576002546040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa908115610ebd578391610e8b575b5015610e465760407f29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c91836005558151908152426020820152a180f35b60405162461bcd60e51b815260206004820152601a60248201527f4e6f204c5020746f6b656e7320746f20646973747269627574650000000000006044820152606490fd5b90506020813d602011610eb5575b81610ea660209383611fd2565b81010312610377575138610e09565b3d9150610e99565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4e6f207265776172647320746f206469737472696275746500000000000000006044820152606490fd5b50346101f257806003193601126101f2576002546040516001600160a01b039091168152602090f35b50346101f257806003193601126101f25760206040516107d08152f35b50346101f25760203660031901126101f2576020906040906001600160a01b03610f7b611f6e565b168152600883522054604051908152f35b50346101f25760203660031901126101f257610fa6611f6e565b6001600160a01b031680825260096020526040822080549192918290610fcb81612143565b92610fd96040519485611fd2565b81845284526020808520859185015b83831061107a5750505050825b825181101561103f57608061100a828561215b565b5101511561101b575b600101610ff5565b90611037600191604061102e858761215b565b5101519061216f565b919050611013565b6020848387808352600884528160016040852001541160001461107357604083600192610d1f955260088652200154612120565b5050610d1f565b6005602060019260405161108d81611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190610fe8565b50346101f257806003193601126101f2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101f257806003193601126101f2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101f25760203660031901126101f2576004356111ab337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b61138881116111e6576020817febdc8ce7038cacbcc77a4f91f4844c9dda6c4319afb91ede186f5494420ec8b692600655604051908152a180f35b60405162461bcd60e51b815260206004820152600f60248201526e41505920657863656564732035302560881b6044820152606490fd5b50346101f25760203660031901126101f2576020906040906001600160a01b03611245611f6e565b168152600a83522054604051908152f35b50346101f25760403660031901126101f257611270611f6e565b6001600160a01b03168152600960205260408120805460243592908310156101f25760a061129e8484612057565b50600180831b0381541690600180841b0360018201541690600281015460ff60046003840154930154169260405194855260208501526040840152606083015215156080820152f35b50346101f257806003193601126101f2576020600754604051908152f35b50346101f2576113143661201d565b91905061132233151561217c565b61132d8215156120c7565b61133b82600354101561238c565b60405163673a2a1f60e01b81529183836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156103845784936114e7575b508392845b81518110156114de57336001600160a01b036113a9838561215b565b51161480156114b9575b6113bf5760010161138d565b505090915060015b1561147c5760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091602091839160449183918991165af190811561038457849161145d575b5015611426578291610a5c82600354612120565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b611476915060203d60201161033b5761032c8183611fd2565b38611412565b60405162461bcd60e51b81526020600482015260156024820152742ab730baba3437b934bd32b2103a3930b739b332b960591b6044820152606490fd5b506001600160a01b036114cc828461215b565b51166001600160a01b038516146113b3565b505090916113c7565b6114fc9193503d8086833e610b9d8183611fd2565b9138611388565b50346101f25760203660031901126101f25760043560038110156106d657611555337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff8019600454169116176004557fe2331ea4aa77bd9050f22ec79661d3d41e161cd0fc67a06e3679fedf8a3a1cfa61049c60ff6004541660405191829182611ff4565b50346101f25760203660031901126101f25760043560ff6004541660038110156103cc576115c79015612089565b80156117de57338252600860205260408220906002820180546115ec83821015612284565b6127108302838104612710036117ca5781611606916122dc565b9084549061271061161784846122c9565b0495600181019061271061162d835496876122c9565b04908961163a8388612120565b604051630328c7b560e01b81523360048201529690602088602481305afa908115610ebd578b988d949261177f575b5092611689959492611684611689936116909c9610156122fc565b612120565b9055612120565b905561169e82600354612120565b6003556002546001600160a01b0316803b1561177b57604051632770a7eb60e21b8152336004820152602481018390529084908290604490829084905af1801561038457611767575b5060015460405163a9059cbb60e01b815233600482015260248101849052906020908290604490829088906001600160a01b03165af18015610384576117339185916107a25750612348565b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a280f35b8361177491949294611fd2565b91386116e7565b8380fd5b99935097505092918b8860203d6020116117c3575b6020926117a18284611fd2565b50810103126117bf57965190968996929390928b9290611689611669565b8b80fd5b503d611794565b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601b60248201527f4c5020746f6b656e20616d6f756e74206d757374206265203e203000000000006044820152606490fd5b50346101f25760203660031901126101f2577ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312602060043561188f337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b61189a8115156120c7565b6118a68160055461216f565b600555604051908152a180f35b50346101f25760203660031901126101f2576118d033151561217c565b60405163673a2a1f60e01b815281816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103425782916119ad575b508190825b81518110156119a657336001600160a01b0361193d838561215b565b51161461194c57600101611921565b50505060015b1561196b5761196560043560035461216f565b60035580f35b60405162461bcd60e51b81526020600482015260136024820152722ab730baba3437b934bd32b21031b0b63632b960691b6044820152606490fd5b5050611952565b6119c191503d8084833e610b9d8183611fd2565b3861191c565b50346101f257806003193601126101f257604051818254908160011c91600181168015611af7575b602084108114611ae3578385528492918115611ac45750600114611a67575b611a1a92500382611fd2565b604051809260208252825192836020840152815b848110611a4f57505091604092838284010152601f80199101168101030190f35b60208282018101516040888401015286945001611a2e565b508380529083907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310611aa8575050906020611a1a92820101611a0e565b6020919350806001915483858801015201910190918392611a90565b60209250611a1a94915060ff191682840152151560051b820101611a0e565b634e487b7160e01b86526022600452602486fd5b92607f16926119ef565b50346101f257806003193601126101f2576002546040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa908115610342578291611b51575b602082604051908152f35b90506020813d602011611b7f575b81611b6c60209383611fd2565b810103126106d657602091505138611b46565b3d9150611b5f565b50346101f25760203660031901126101f257611ba1611f6e565b6001600160a01b0316815260096020526040812080548290611bc281612143565b92611bd06040519485611fd2565b81845282526020808320839185015b838310611c3757505050505b8151811015611c2c576080611c00828461215b565b51015115611c11575b600101611beb565b91611c24600191604061102e868661215b565b929050611c09565b602083604051908152f35b60056020600192604051611c4a81611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190611bdf565b50346101f25760403660031901126101f2576004356024359060ff600454166003811015611f5a57611cc79015612089565b611cd28215156120c7565b33835260096020526040832054811015611f2057611cfb90338452600960205260408420612057565b50600481019060ff825416611ee55760020180548311611eaa576001546040516323b872dd60e01b815233600482015230602482015260448101859052906020908290606490829089906001600160a01b03165af1908115610783578591611e8b575b5015611e4657828154808214600014611e3457505050600160ff198254161790555b611d8c81600754612120565b600755604051630328c7b560e01b8152336004820152602081602481305afa908115610ebd578391611e02575b5015611def575b6040519081527fe8b606ac1e5df7657db58d297ca8f41c090fc94c5fd2d6958f043e41736e9fa660203392a280f35b338252600a602052816040812055611dc0565b90506020813d602011611e2c575b81611e1d60209383611fd2565b810103126106d2575138611db9565b3d9150611e10565b611e3f929350612120565b9055611d80565b60405162461bcd60e51b815260206004820152601960248201527f52657061796d656e74207472616e73666572206661696c6564000000000000006044820152606490fd5b611ea4915060203d60201161033b5761032c8183611fd2565b38611d5e565b60405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d08195e18d959591cc81919589d606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721119589d08185b1c9958591e481c995c185a59606a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840c8cac4e840d2dcc8caf60731b6044820152606490fd5b634e487b7160e01b84526021600452602484fd5b600435906001600160a01b038216820361037757565b60a0810190811067ffffffffffffffff821117611fa057604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117611fa057604052565b90601f8019910116810190811067ffffffffffffffff821117611fa057604052565b9190602083019260038210156120075752565b634e487b7160e01b600052602160045260246000fd5b6060906003190112610377576004356001600160a01b038116810361037757906024356001600160a01b0381168103610377579060443590565b8054821015612073576000526005602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b1561209057565b60405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b6044820152606490fd5b156120ce57565b60405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606490fd5b90816020910312610377575180151581036103775790565b9190820391821161212d57565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8111611fa05760051b60200190565b80518210156120735760209160051b010190565b9190820180921161212d57565b1561218357565b60405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606490fd5b6020818303126103775780519067ffffffffffffffff821161037757019080601f83011215610377578151906121ee82612143565b926121fc6040519485611fd2565b82845260208085019360051b82010191821161037757602001915b8183106122245750505090565b82516001600160a01b038116810361037757815260209283019201612217565b1561224b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba103330b1ba37b93c9037bbb732b960791b6044820152606490fd5b1561228b57565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c5020746f6b656e7360501b6044820152606490fd5b8181029291811591840414171561212d57565b81156122e6570490565b634e487b7160e01b600052601260045260246000fd5b1561230357565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b1561234f57565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b1561239357565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606490fd5b60018060a01b03169081600052600860205260016040600020015460405163673a2a1f60e01b815260008160048160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561254f57600091612534575b5060005b815181101561252d57306001600160a01b03612459838561215b565b51160361246b575b6001905b0161243d565b602460806001600160a01b03612481848661215b565b5116604051928380926303d3b32360e51b82528a60048301525afa600091816124cd575b506124b35750600190612465565b6001919360206124c59201519061216f565b929050612461565b90916080823d8211612525575b816124e760809383611fd2565b810103126101f257506060604051916124ff83611fb6565b8051835260208101516020840152604081015160408401520151606082015290386124a5565b3d91506124da565b5090925050565b61254991503d806000833e610b9d8183611fd2565b38612439565b6040513d6000823e3d90fd5b906125678115156120c7565b6001600160a01b03821615612b3f5761257f336123d1565b604051634a3a743f60e01b8152336004820152602081602481305afa90811561254f57600091612b0d575b50600354908381101580612b03575b612af757838192106128ac575b5080838110612633575b50826125dd91101561238c565b81116125ee576125ec91612b84565b565b60405162461bcd60e51b815260206004820152601860248201527f4578636565647320636f6c6c61746572616c206c696d697400000000000000006044820152606490fd5b949193929190506126448583612120565b60405163673a2a1f60e01b815290959390926000846004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa93841561254f5760009461288f575b5060005b845181101561287d578715612868576001600160a01b036126bc828761215b565b511630811461285f576040516326d352ab60e11b8152336004820152602081602481855afa6000918161282c575b506126fb5750506001905b0161269b565b6107d08102908082046107d0149015171561212d57612710900489811115612826575088905b604051630abb87c960e11b8152602081600481855afa600091816127f3575b50612750575050506001906126f5565b8280151591826127e8575b505061276c575b50506001906126f5565b803b1561037757604051633ce4a56360e11b815230600482015233602482015260448101839052906000908290606490829084905af190816127d7575b506127b757506001906126f5565b806127c96127cf926001949b9961216f565b97612120565b979038612762565b60006127e291611fd2565b386127a9565b10159050823861275b565b90916020823d821161281e575b8161280d60209383611fd2565b810103126101f25750519038612740565b3d9150612800565b90612721565b90916020823d8211612857575b8161284660209383611fd2565b810103126101f257505190386126ea565b3d9150612839565b506001906126f5565b50936125dd92965084919593505b91506125d0565b50936125dd9296508491959350612876565b6128a59194503d806000833e610b9d8183611fd2565b9238612697565b949193929190506128bd8583612120565b60405163673a2a1f60e01b815290959390926000846004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa93841561254f57600094612ada575b5060005b8451811015612acd578715612abe576001600160a01b03612935828761215b565b5116308114612ab557604051634a3a743f60e01b815233600482015290602082602481845afa60009281612a82575b506129755750506001905b01612914565b604051630abb87c960e11b815291602083600481855afa60009381612a4f575b506129a55750505060019061296f565b8a811115612a4857508980925b101580612a3f575b6129c9575b505060019061296f565b803b15610377576040516317efdd9d60e11b815230600482015233602482015260448101839052906000908290606490829084905af19081612a2e575b50612a14575060019061296f565b806127c9612a26926001949b9961216f565b9790386129bf565b6000612a3991611fd2565b38612a06565b508115156129ba565b80926129b2565b90936020823d8211612a7a575b81612a6960209383611fd2565b810103126101f25750519238612995565b3d9150612a5c565b90926020823d8211612aad575b81612a9c60209383611fd2565b810103126101f25750519138612964565b3d9150612a8f565b5060019061296f565b50939195509391505b386125c6565b5093919550939150612ac7565b612af09194503d806000833e610b9d8183611fd2565b9238612910565b5050506125ec91612b84565b50838210156125b9565b906020823d602011612b37575b81612b2760209383611fd2565b810103126101f2575051386125aa565b3d9150612b1a565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d65726368616e74206164647265737300000000000000006044820152606490fd5b90600354600090828110613049576002546040516318160ddd60e01b81526001600160a01b039091169190602081600481865afa908115610384578491613017575b50612c075760405162461bcd60e51b81526020600482015260146024820152732737902628103a37b5b2b739903a3790313ab93760611b6044820152606490fd5b6040516318160ddd60e01b8152602081600481865afa908115610384578491612fe3575b50612c43602492612c3e602093886122c9565b6122dc565b92604051928380926370a0823160e01b82523360048301525afa8015610ebd5782908490612fad575b612c7892501015612284565b338252600860205260408220600281018054838110612f685783612c9b91612120565b9055612ca8848254612120565b8082556107d08102908082046107d01490151715610bac5761271060019104910155612cd683600354612120565b6003556002546001600160a01b031690813b156106d257604051632770a7eb60e21b815233600482015260248101919091529082908290604490829084905af18015610342578290612f58575b50503381526009602052604081209260405193612d3f85611f84565b338552602085019460018060a01b03831695868152604082018681526060830191428352608084019487865280549068010000000000000000821015612f445790612d8f91600182018155612057565b949094612f30575184546001600160a01b039182166001600160a01b0319918216178655915160018601805491909216921691909117905551600283015551600382015590516004909101805460ff191691151560ff16919091179055600754612dfa90849061216f565b60075562015180420180421161078e5783612e6392602092338652600a845260408620548111612f1e575b5060015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935291938492909116908290869082906044820190565b03925af1918215612f125791612ef3575b5015612eae576040519081523060208201527f02b13a848a4fdd9c53f7a9eeed12b50ee873fb61eccba06426e80ade0ff0b91860403392a3565b60405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152606490fd5b612f0c915060203d60201161033b5761032c8183611fd2565b38612e74565b604051903d90823e3d90fd5b338652600a8452604086205538612e25565b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b89526041600452602489fd5b612f6191611fd2565b3881612d23565b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206d696e746564204c5020746f6b656e730000006044820152606490fd5b50506020813d602011612fdb575b81612fc860209383611fd2565b810103126106d25781612c789151612c6c565b3d9150612fbb565b90506020813d60201161300f575b81612ffe60209383611fd2565b8101031261177b5751612c43612c2b565b3d9150612ff1565b90506020813d602011613041575b8161303260209383611fd2565b8101031261177b575138612bc6565b3d9150613025565b60405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420706f6f6c206c697175696469747900000000006044820152606490fdfea2646970667358221220f10cecac897b348daa64826f46afac22b6ba632e597daddf39ec04be58ee99d064736f6c634300081c003360806040523461035f57610e828038038061001981610364565b92833981019060608183031261035f5780516001600160401b03811161035f5782610045918301610389565b60208201519092906001600160401b03811161035f57604091610069918401610389565b9101516001600160a01b0381169081900361035f576002805460ff1916601217905582516001600160401b03811161026a57600054600181811c91168015610355575b602082101461024a57601f81116102f1575b506020601f821160011461028b5781929394600092610280575b50508160011b916000199060031b1c1916176000555b81516001600160401b03811161026a57600154600181811c91168015610260575b602082101461024a57601f81116101e5575b50602092601f82116001146101805792819293600092610175575b50508160011b916000199060031b1c1916176001555b600680546001600160a01b031916919091179055604051610a8d90816103f58239f35b01519050388061013c565b601f198216936001600052806000209160005b8681106101cd57508360019596106101b4575b505050811b01600155610152565b015160001960f88460031b161c191690553880806101a6565b91926020600181928685015181550194019201610193565b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610240575b601f0160051c01905b8181106102345750610121565b60008155600101610227565b909150819061021e565b634e487b7160e01b600052602260045260246000fd5b90607f169061010f565b634e487b7160e01b600052604160045260246000fd5b0151905038806100d8565b601f1982169060008052806000209160005b8181106102d9575095836001959697106102c0575b505050811b016000556100ee565b015160001960f88460031b161c191690553880806102b2565b9192602060018192868b01518155019401920161029d565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c8101916020841061034b575b601f0160051c01905b81811061033f57506100be565b60008155600101610332565b9091508190610329565b90607f16906100ac565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761026a57604052565b81601f8201121561035f578051906001600160401b03821161026a576103b8601f8301601f1916602001610364565b928284526020838301011161035f5760005b8281106103df57505060206000918301015290565b806020809284010151828287010152016103ca56fe6080604052600436101561001257600080fd5b60003560e01c806306fdde031461060d578063095ea7b3146105e757806318160ddd146105c957806323b872dd14610501578063313ce567146104e057806340c10f19146103f957806370a08231146103bf5780638da5cb5b1461039657806395d89b41146102755780639dc29fac14610127578063a9059cbb146100f65763dd62ed3e146100a057600080fd5b346100f15760403660031901126100f1576100b9610710565b6100c1610726565b6001600160a01b039182166000908152600560209081526040808320949093168252928352819020549051908152f35b600080fd5b346100f15760403660031901126100f15761011c610112610710565b60243590336108c3565b602060405160018152f35b346100f15760403660031901126100f157610140610710565b6024359061015960018060a01b0360065416331461075f565b6001600160a01b031680156102245780600052600460205281604060002054106101d3577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009383855260048252604085206101b982825461073c565b90556101c78160035461073c565b600355604051908152a3005b60405162461bcd60e51b8152602060048201526024808201527f4c5045524332303a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f4c5045524332303a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b346100f15760003660031901126100f1576000604051816001548060011c9060018116801561038c575b6020831081146103785782855290811561035c5750600114610308575b50819003601f01601f1916810167ffffffffffffffff8111828210176102f4576102f09250604052604051918291826106c7565b0390f35b634e487b7160e01b83526041600452602483fd5b600184529050827fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828210610346575060209150820101836102bc565b6001816020925483858801015201910190610331565b90506020925060ff191682840152151560051b820101836102bc565b634e487b7160e01b86526022600452602486fd5b91607f169161029f565b346100f15760003660031901126100f1576006546040516001600160a01b039091168152602090f35b346100f15760203660031901126100f1576001600160a01b036103e0610710565b1660005260046020526020604060002054604051908152f35b346100f15760403660031901126100f157610412610710565b6024359061042b60018060a01b0360065416331461075f565b6001600160a01b0316908115610491577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261046d6000946003546107aa565b60035584845260048252604084206104868282546107aa565b9055604051908152a3005b60405162461bcd60e51b815260206004820152602160248201527f4c5045524332303a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b346100f15760003660031901126100f157602060ff60025416604051908152f35b346100f15760603660031901126100f15761051a610710565b610522610726565b6001600160a01b038216600090815260056020908152604080832033845290915290205491906044358084106105715761011c936105648261056994866108c3565b61073c565b9033906107b7565b60405162461bcd60e51b815260206004820152602a60248201527f4c5045524332303a207472616e7366657220616d6f756e74206578636565647360448201526920616c6c6f77616e636560b01b6064820152608490fd5b346100f15760003660031901126100f1576020600354604051908152f35b346100f15760403660031901126100f15761011c610603610710565b60243590336107b7565b346100f15760003660031901126100f15760006040518182548060011c906001811680156106bd575b6020831081146103785782855290811561035c57506001146106865750819003601f01601f1916810167ffffffffffffffff8111828210176102f4576102f09250604052604051918291826106c7565b90508280526020832083905b8282106106a7575060209150820101836102bc565b6001816020925483858801015201910190610692565b91607f1691610636565b91909160208152825180602083015260005b8181106106fa575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106d9565b600435906001600160a01b03821682036100f157565b602435906001600160a01b03821682036100f157565b9190820391821161074957565b634e487b7160e01b600052601160045260246000fd5b1561076657565b606460405162461bcd60e51b815260206004820152602060248201527f4c5045524332303a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190820180921161074957565b6001600160a01b031690811561086f576001600160a01b031691821561081e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260058252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b8152602060048201526024808201527f4c5045524332303a20617070726f766520746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f4c5045524332303a20617070726f76652066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6001600160a01b0316908115610a02576001600160a01b03169182156109af5781600052600460205280604060002054106109595760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918360005260048252604060002061093482825461073c565b90558460005260048252604060002061094e8282546107aa565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602860248201527f4c5045524332303a207472616e7366657220616d6f756e7420657863656564736044820152672062616c616e636560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f4c5045524332303a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f4c5045524332303a207472616e736665722066726f6d20746865207a65726f206044820152666164647265737360c81b6064820152608490fdfea26469706673582212201bbefa2c147203deadc328cb59c54baa3d4b57162c5d5825c3907827fbef665d64736f6c634300081c0033a2646970667358221220927f0418614a06e87898d9cdf63015f800cc81dba5a9477e593be602bc6c9b1964736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b6000803560e01c806301d4860514610ba75780631e9b12ef14610ae15780632e641b5a1461094c57806345a79e26146108ad5780635298b869146108845780636282d7ec14610799578063673a2a1f146106d15780638da5cb5b146106aa5780638eec5d701461068c578063996eebbd14610645578063ac4afa3814610601578063d0d130361461020f578063d5fe55c2146101625763f2fde38b146100b757600080fd5b3461015f57602036600319011261015f576100d0610cc0565b8154906100e7336001600160a01b03841614610d66565b6001600160a01b0316908115610107576001600160a01b03191617815580f35b60405162461bcd60e51b815260206004820152602a60248201527f506f6f6c466163746f72793a206e6577206f776e657220697320746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b80fd5b503461015f57602036600319011261015f578061017d610cc0565b61019160018060a01b038354163314610d66565b6001600160a01b03166101a5811515610dbe565b80825260046020526101c46101bd6040842054610cd6565b1515610e14565b803b1561020c5781809160046040518094819363c02857bd60e01b83525af18015610201576101f05750f35b816101fa91610be7565b61015f5780f35b6040513d84823e3d90fd5b50fd5b503461015f5761021e36610c1f565b81546001600160a01b03169190610236338414610d66565b8051156105ab576040519260ff8251946020818186019761025881838b610c9d565b81016003815203019020541661055b576002546001600160a01b031690811561050b5760405191614398908184019184831067ffffffffffffffff8411176104f7579084939291610e618539608082526102b56080830187610d10565b9260208301526040820152606030910152039083f080156102015760018060a01b0316600154680100000000000000008110156104e3578060016102fc9201600155610d35565b81549060031b9083821b9160018060a01b03901b1916179055604051602081845161032881838a610c9d565b81016003815203019020600160ff198254161790558083526004602052604083209382519467ffffffffffffffff86116104cf576103668154610cd6565b601f811161048a575b50602095601f81116001146104215790816020939287986103b796979891610416575b508160011b916000199060031b1c19161790555b604051809381928751928391610c9d565b81016005815203019020816bffffffffffffffffffffffff60a01b8254161790557f8f593eb1efa9325b878783797a652bd79616978dc4d101da8c0c04df88b39808604051602081528061041033956020830190610d10565b0390a380f35b905087015138610392565b818652868620601f198216875b8181106104725750916001916103b79697989982602097969510610459575b5050811b0190556103a6565b89015160001960f88460031b161c19169055388061044d565b878a015183556020998a01996001909301920161042e565b81865260208620601f880160051c810191602089106104c5575b601f0160051c01905b8181106104ba575061036f565b8681556001016104ad565b90915081906104a4565b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a207374616b696e6720746f6b656e206e6f742073604482015261195d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20726567696f6e20616c72656164792065786973604482015261747360f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f506f6f6c466163746f72793a20726567696f6e206e616d652063616e6e6f7420604482015267626520656d70747960c01b6064820152608490fd5b503461015f57602036600319011261015f576004359060015482101561015f57602061062c83610d35565b905460405160039290921b1c6001600160a01b03168152f35b503461015f57602061065636610c1f565b8161066a6040519283815193849201610c9d565b600590820190815281900382019020546040516001600160a01b039091168152f35b503461015f578060031936011261015f576020600154604051908152f35b503461015f578060031936011261015f57546040516001600160a01b039091168152602090f35b503461015f578060031936011261015f5760405180602060015491828152018091600185527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690855b81811061077a5750505082610730910383610be7565b604051928392602084019060208552518091526040840192915b818110610758575050500390f35b82516001600160a01b031684528594506020938401939092019160010161074a565b82546001600160a01b031684526020909301926001928301920161071a565b503461015f57602036600319011261015f576001600160a01b036107bb610cc0565b1681526004602052604081209060405191818154916107d983610cd6565b808652926001811690811561085a5750600114610819575b6108158561080181870382610be7565b604051918291602083526020830190610d10565b0390f35b815260208120939250905b80821061084057509091508101602001610801826108156107f1565b919260018160209254838588010152019101909291610824565b8695506108159693506020925061080194915060ff191682840152151560051b82010192936107f1565b503461015f578060031936011261015f576002546040516001600160a01b039091168152602090f35b503461015f576108bc36610c1f565b60405160ff825191602081818601946108d6818388610c9d565b810160038152030190205416156108fc5760209161066a60405192839251928391610c9d565b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20726567696f6e20646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b503461015f57604036600319011261015f57610966610cc0565b6024359061097e60018060a01b038454163314610d66565b6001600160a01b0316610992811515610dbe565b80835260046020526109aa6101bd6040852054610cd6565b8115610a8957829182602060018060a01b03600254166064604051809481936323b872dd60e01b83523360048401528860248401528760448401525af18015610a7e57610a45575b50813b15610a4157829160248392604051958693849263054f713360e31b845260048401525af18015610a3457610a265780f35b610a2f91610be7565b388180f35b50604051903d90823e3d90fd5b5050fd5b6020813d602011610a76575b81610a5e60209383610be7565b81010312610a71575180151581146109f2575b505050fd5b3d9150610a51565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152602a60248201527f506f6f6c466163746f72793a20616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608490fd5b503461015f57602036600319011261015f57610afb610cc0565b610b0f60018060a01b038354163314610d66565b6001600160a01b03168015610b5757600280546001600160a01b031916821790557f08d9e26510a3cb1d512e4122208b8399da71fdde379ed7801f26cc073be0cad28280a280f35b60405162461bcd60e51b815260206004820152602260248201527f506f6f6c466163746f72793a20696e76616c696420746f6b656e206164647265604482015261737360f01b6064820152608490fd5b503461015f57602060ff610bd182610bbe36610c1f565b8160405193828580945193849201610c9d565b8101600381520301902054166040519015158152f35b90601f8019910116810190811067ffffffffffffffff821117610c0957604052565b634e487b7160e01b600052604160045260246000fd5b6020600319820112610c985760043567ffffffffffffffff8111610c985781602382011215610c985780600401359067ffffffffffffffff8211610c095760405192610c75601f8401601f191660200185610be7565b82845260248383010111610c985781600092602460209301838601378301015290565b600080fd5b60005b838110610cb05750506000910152565b8181015183820152602001610ca0565b600435906001600160a01b0382168203610c9857565b90600182811c92168015610d06575b6020831014610cf057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ce5565b90602091610d2981518092818552858086019101610c9d565b601f01601f1916010190565b600154811015610d5057600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b15610d6d57565b60405162461bcd60e51b8152602060048201526024808201527f506f6f6c466163746f72793a2063616c6c6572206973206e6f7420746865206f6044820152633bb732b960e11b6064820152608490fd5b15610dc557565b60405162461bcd60e51b815260206004820152602160248201527f506f6f6c466163746f72793a20696e76616c696420706f6f6c206164647265736044820152607360f81b6064820152608490fd5b15610e1b57565b60405162461bcd60e51b815260206004820152601b60248201527f506f6f6c466163746f72793a20706f6f6c206e6f7420666f756e6400000000006044820152606490fdfe60c080604052346103cd57614398803803809161001c82856103d2565b833981016080828203126103cd5781516001600160401b0381116103cd57820181601f820112156103cd578051906001600160401b0382116102b85760405191610070601f8201601f1916602001846103d2565b8083526020830193602082840101116103cd5783602061009093016103f5565b61009c60208401610418565b926100b560606100ae60408401610418565b9201610418565b6101f46006558251946001600160401b0386116102b857600054600181811c911680156103c3575b60208210146103ad57601f8111610349575b50602095601f81116001146102d9579160249391836101bd96946101ac996000916102ce575b508160011b916000199060031b1c1916176000555b60805260a05260018060a01b031660018060a01b0319600154161760015560ff1960045416600455604051936741656769734c502d60c01b602086015261018d602886845161017c81848401876103f5565b81010301601f1981018752866103d2565b60405195869263414c502d60e01b6020850152518092858501906103f5565b81010301601f1981018452836103d2565b60405191610e8291828401916001600160401b038311858410176102b8576101f7610205928695613516873960608552606085019061042c565b90838203602085015261042c565b9060403091015203906000f080156102ac57600280546001600160a01b0319166001600160a01b03929092169190911790556040516130c4908161045282396080518181816102430152818161041501528181610d85015281816110ee0152818161117d015281816115270152611861015260a0518181816109860152818161113301528181611350015281816118e4015281816124080152818161265e01526128d70152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b905085015138610115565b601f19811660008052876000209060005b81811061033157508260249694926101ac9a6101bd99979560019410610318575b5050811b0160005561012a565b87015160001960f88460031b161c19169055388061030b565b878a015183556020998a0199600190930192016102ea565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f880160051c810191602089106103a3575b601f0160051c01905b81811061039757506100ef565b6000815560010161038a565b9091508190610381565b634e487b7160e01b600052602260045260246000fd5b90607f16906100dd565b600080fd5b601f909101601f19168101906001600160401b038211908210176102b857604052565b60005b8381106104085750506000910152565b81810151838201526020016103f8565b51906001600160a01b03821682036103cd57565b90602091610445815180928185528580860191016103f5565b601f01601f191601019056fe6080604052600436101561001257600080fd5b6000803560e01c8063015cb0a514611c955780630328c7b514611b875780630ff3420114611b01578063117f910d146119c757806315770f92146101f55780631a28b995146118b3578063200d2ed21461083b5780632a7b8998146118235780632e17de78146115995780632e49d78b146115035780632fdfbb3a1461130557806334ce998a146112e7578063365e84d51461125657806336e2af731461121d5780633b3f5e36146111625780633bcfc4b8146107c15780634219dc401461111d5780634273601c146110d85780634a3a743f14610f8c5780634da6a55614610f5357806357a27ced14610f365780635fcbd28514610f0d5780636f4a2cd014610d6e57806372f702f314610d455780637404a1fd14610d27578063748b298b14610cfb57806378c8390c14610bc057806379c94ac6146109025780637a766460146108655780637f79496c1461083b5780639168ae72146107df57806393a6983d146107c1578063a694fc3a1461050f578063bb9f661c146104cc578063c02857bd146103fe578063c2dbcb14146103e0578063db2e21bc14610230578063e1f1c4a714610213578063e86f6a0d146101f55763fc7b9c18146101d557600080fd5b346101f257806003193601126101f2576020600754604051908152f35b80fd5b50346101f257806003193601126101f2576020600354604051908152f35b50346101f257806003193601126101f25760206040516127108152f35b50346101f257806003193601126101f2577f0000000000000000000000000000000000000000000000000000000000000000610276336001600160a01b03831614612244565b60ff6004541660038110156103cc5760020361038f576001546040516370a0823160e01b81523060048201526001600160a01b039091169190602081602481865afa90811561038457849161034d575b50806102d0578380f35b60405163a9059cbb60e01b81526001600160a01b039290921660048301526024820152906020908290604490829086905af1801561034257610313575b80808380f35b6103349060203d60201161033b575b61032c8183611fd2565b810190612108565b503861030d565b503d610322565b6040513d84823e3d90fd5b90506020813d60201161037c575b8161036860209383611fd2565b810103126103775751386102c6565b600080fd5b3d915061035b565b6040513d86823e3d90fd5b60405162461bcd60e51b8152602060048201526015602482015274506f6f6c206d75737420626520696e61637469766560581b6044820152606490fd5b634e487b7160e01b83526021600452602483fd5b50346101f257806003193601126101f2576020604051620151808152f35b50346101f257806003193601126101f257610443337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff6004541660038110156104b857806104a25750600160ff1960045416176004555b7fe2331ea4aa77bd9050f22ec79661d3d41e161cd0fc67a06e3679fedf8a3a1cfa61049c60ff6004541660405191829182611ff4565b0390a180f35b6001036104665760ff1960045416600455610466565b634e487b7160e01b82526021600452602482fd5b50346101f25760403660031901126101f2576104e6611f6e565b60ff6004541660038110156103cc579061050361050c9215612089565b6024359061255b565b80f35b50346101f25760203660031901126101f25760043560ff6004541660038110156103cc5761053d9015612089565b801561054981156120c7565b6001546040516323b872dd60e01b815233600482015230602482015260448101849052906020908290606490829088906001600160a01b03165af180156103845761059b9185916107a2575b50612348565b6107d08202908282046107d014171561078e576002546040516318160ddd60e01b81526001600160a01b0390911690602081600481855afa908115610783578591610751575b506106da575081905b3384526008602052604084209061060284835461216f565b8255610617612710600184019204825461216f565b90556002810161062883825461216f565b905560034291015561063c8260035461216f565b60035560025483906001600160a01b0316803b156106d6576040516340c10f1960e01b8152336004820152602481018490529082908290604490829084905af18015610342576106bd575b505060405191825260208201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060403392a280f35b816106c791611fd2565b6106d2578238610687565b8280fd5b5080fd5b6020600491604051928380926318160ddd60e01b82525afa90811561038457849161071d575b5061070e61071791846122c9565b600354906122dc565b906105ea565b90506020813d602011610749575b8161073860209383611fd2565b81010312610377575161070e610700565b3d915061072b565b90506020813d60201161077b575b8161076c60209383611fd2565b810103126103775751386105e1565b3d915061075f565b6040513d87823e3d90fd5b634e487b7160e01b83526011600452602483fd5b6107bb915060203d60201161033b5761032c8183611fd2565b38610595565b50346101f257806003193601126101f2576020600654604051908152f35b50346101f25760203660031901126101f2576080906040906001600160a01b03610807611f6e565b1681526008602052208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b50346101f257806003193601126101f25761086160ff6004541660405191829182611ff4565b0390f35b50346101f25760203660031901126101f2576040608091610884611f6e565b816060845161089281611fb6565b8281528260208201528286820152015260018060a01b031681526008602052206040516108be81611fb6565b815491828252600181015460208301908152606060036002840154936040860194855201549301928352604051938452516020840152516040830152516060820152f35b50346101f2576109113661201d565b919061091e33151561217c565b6109298315156120c7565b61093783600354101561238c565b6001600160a01b03168352600860205260408320546107d08082029180159083049091141715610bac5782612710610971920410156122fc565b60405163673a2a1f60e01b81529183836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610384578493610b88575b508392845b8151811015610b7f57336001600160a01b036109df838561215b565b5116148015610b5a575b6109f5576001016109c3565b505090915060015b15610b155760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091602091839160449183918991165af1908115610384578491610af6575b5015610ab1578291610a5c82600354612120565b6003556001600160a01b031690813b15610aad578291602483926040519485938492631a28b99560e01b845260048401525af1801561034257610a9c5750f35b81610aa691611fd2565b6101f25780f35b5050fd5b60405162461bcd60e51b815260206004820152601c60248201527f436f6e747269627574696f6e207472616e73666572206661696c6564000000006044820152606490fd5b610b0f915060203d60201161033b5761032c8183611fd2565b38610a48565b60405162461bcd60e51b815260206004820152601960248201527f556e617574686f72697a656420636f6e747269627574696f6e000000000000006044820152606490fd5b506001600160a01b03610b6d828461215b565b51166001600160a01b038516146109e9565b505090916109fd565b610ba59193503d8086833e610b9d8183611fd2565b8101906121b9565b91386109be565b634e487b7160e01b84526011600452602484fd5b50346101f25760203660031901126101f2576001600160a01b03610be2611f6e565b1681526009602052604081208054610bf981612143565b90610c076040519283611fd2565b80825260208201809385526020852085915b838310610c9d57868587604051928392602084019060208552518091526040840192915b818110610c4b575050500390f35b91935091602060a0600192608087518580851b0381511683528580851b038582015116858401526040810151604084015260608101516060840152015115156080820152019401910191849392610c3d565b60056020600192604051610cb081611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190610c19565b50346101f25760203660031901126101f2576020610d1f610d1a611f6e565b6123d1565b604051908152f35b50346101f257806003193601126101f2576020600554604051908152f35b50346101f257806003193601126101f2576001546040516001600160a01b039091168152602090f35b50346101f257806003193601126101f257610db3337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff6004541660038110156104b857610dcc9015612089565b6005548015610ec8576002546040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa908115610ebd578391610e8b575b5015610e465760407f29e98ba00d07f171959c4ddcd2f3020debc7c52cf537a034d7e664340d098c6c91836005558151908152426020820152a180f35b60405162461bcd60e51b815260206004820152601a60248201527f4e6f204c5020746f6b656e7320746f20646973747269627574650000000000006044820152606490fd5b90506020813d602011610eb5575b81610ea660209383611fd2565b81010312610377575138610e09565b3d9150610e99565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601860248201527f4e6f207265776172647320746f206469737472696275746500000000000000006044820152606490fd5b50346101f257806003193601126101f2576002546040516001600160a01b039091168152602090f35b50346101f257806003193601126101f25760206040516107d08152f35b50346101f25760203660031901126101f2576020906040906001600160a01b03610f7b611f6e565b168152600883522054604051908152f35b50346101f25760203660031901126101f257610fa6611f6e565b6001600160a01b031680825260096020526040822080549192918290610fcb81612143565b92610fd96040519485611fd2565b81845284526020808520859185015b83831061107a5750505050825b825181101561103f57608061100a828561215b565b5101511561101b575b600101610ff5565b90611037600191604061102e858761215b565b5101519061216f565b919050611013565b6020848387808352600884528160016040852001541160001461107357604083600192610d1f955260088652200154612120565b5050610d1f565b6005602060019260405161108d81611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190610fe8565b50346101f257806003193601126101f2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101f257806003193601126101f2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101f25760203660031901126101f2576004356111ab337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b61138881116111e6576020817febdc8ce7038cacbcc77a4f91f4844c9dda6c4319afb91ede186f5494420ec8b692600655604051908152a180f35b60405162461bcd60e51b815260206004820152600f60248201526e41505920657863656564732035302560881b6044820152606490fd5b50346101f25760203660031901126101f2576020906040906001600160a01b03611245611f6e565b168152600a83522054604051908152f35b50346101f25760403660031901126101f257611270611f6e565b6001600160a01b03168152600960205260408120805460243592908310156101f25760a061129e8484612057565b50600180831b0381541690600180841b0360018201541690600281015460ff60046003840154930154169260405194855260208501526040840152606083015215156080820152f35b50346101f257806003193601126101f2576020600754604051908152f35b50346101f2576113143661201d565b91905061132233151561217c565b61132d8215156120c7565b61133b82600354101561238c565b60405163673a2a1f60e01b81529183836004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156103845784936114e7575b508392845b81518110156114de57336001600160a01b036113a9838561215b565b51161480156114b9575b6113bf5760010161138d565b505090915060015b1561147c5760015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091602091839160449183918991165af190811561038457849161145d575b5015611426578291610a5c82600354612120565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b611476915060203d60201161033b5761032c8183611fd2565b38611412565b60405162461bcd60e51b81526020600482015260156024820152742ab730baba3437b934bd32b2103a3930b739b332b960591b6044820152606490fd5b506001600160a01b036114cc828461215b565b51166001600160a01b038516146113b3565b505090916113c7565b6114fc9193503d8086833e610b9d8183611fd2565b9138611388565b50346101f25760203660031901126101f25760043560038110156106d657611555337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b60ff8019600454169116176004557fe2331ea4aa77bd9050f22ec79661d3d41e161cd0fc67a06e3679fedf8a3a1cfa61049c60ff6004541660405191829182611ff4565b50346101f25760203660031901126101f25760043560ff6004541660038110156103cc576115c79015612089565b80156117de57338252600860205260408220906002820180546115ec83821015612284565b6127108302838104612710036117ca5781611606916122dc565b9084549061271061161784846122c9565b0495600181019061271061162d835496876122c9565b04908961163a8388612120565b604051630328c7b560e01b81523360048201529690602088602481305afa908115610ebd578b988d949261177f575b5092611689959492611684611689936116909c9610156122fc565b612120565b9055612120565b905561169e82600354612120565b6003556002546001600160a01b0316803b1561177b57604051632770a7eb60e21b8152336004820152602481018390529084908290604490829084905af1801561038457611767575b5060015460405163a9059cbb60e01b815233600482015260248101849052906020908290604490829088906001600160a01b03165af18015610384576117339185916107a25750612348565b60405191825260208201527f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e60403392a280f35b8361177491949294611fd2565b91386116e7565b8380fd5b99935097505092918b8860203d6020116117c3575b6020926117a18284611fd2565b50810103126117bf57965190968996929390928b9290611689611669565b8b80fd5b503d611794565b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601b60248201527f4c5020746f6b656e20616d6f756e74206d757374206265203e203000000000006044820152606490fd5b50346101f25760203660031901126101f2577ff8fad42e780bfa5459be3fe691e8ba1aec70342250112139c5771c3fd155f312602060043561188f337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612244565b61189a8115156120c7565b6118a68160055461216f565b600555604051908152a180f35b50346101f25760203660031901126101f2576118d033151561217c565b60405163673a2a1f60e01b815281816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103425782916119ad575b508190825b81518110156119a657336001600160a01b0361193d838561215b565b51161461194c57600101611921565b50505060015b1561196b5761196560043560035461216f565b60035580f35b60405162461bcd60e51b81526020600482015260136024820152722ab730baba3437b934bd32b21031b0b63632b960691b6044820152606490fd5b5050611952565b6119c191503d8084833e610b9d8183611fd2565b3861191c565b50346101f257806003193601126101f257604051818254908160011c91600181168015611af7575b602084108114611ae3578385528492918115611ac45750600114611a67575b611a1a92500382611fd2565b604051809260208252825192836020840152815b848110611a4f57505091604092838284010152601f80199101168101030190f35b60208282018101516040888401015286945001611a2e565b508380529083907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310611aa8575050906020611a1a92820101611a0e565b6020919350806001915483858801015201910190918392611a90565b60209250611a1a94915060ff191682840152151560051b820101611a0e565b634e487b7160e01b86526022600452602486fd5b92607f16926119ef565b50346101f257806003193601126101f2576002546040516318160ddd60e01b815290602090829060049082906001600160a01b03165afa908115610342578291611b51575b602082604051908152f35b90506020813d602011611b7f575b81611b6c60209383611fd2565b810103126106d657602091505138611b46565b3d9150611b5f565b50346101f25760203660031901126101f257611ba1611f6e565b6001600160a01b0316815260096020526040812080548290611bc281612143565b92611bd06040519485611fd2565b81845282526020808320839185015b838310611c3757505050505b8151811015611c2c576080611c00828461215b565b51015115611c11575b600101611beb565b91611c24600191604061102e868661215b565b929050611c09565b602083604051908152f35b60056020600192604051611c4a81611f84565b848060a01b038654168152848060a01b03858701541683820152600286015460408201526003860154606082015260ff60048701541615156080820152815201920192019190611bdf565b50346101f25760403660031901126101f2576004356024359060ff600454166003811015611f5a57611cc79015612089565b611cd28215156120c7565b33835260096020526040832054811015611f2057611cfb90338452600960205260408420612057565b50600481019060ff825416611ee55760020180548311611eaa576001546040516323b872dd60e01b815233600482015230602482015260448101859052906020908290606490829089906001600160a01b03165af1908115610783578591611e8b575b5015611e4657828154808214600014611e3457505050600160ff198254161790555b611d8c81600754612120565b600755604051630328c7b560e01b8152336004820152602081602481305afa908115610ebd578391611e02575b5015611def575b6040519081527fe8b606ac1e5df7657db58d297ca8f41c090fc94c5fd2d6958f043e41736e9fa660203392a280f35b338252600a602052816040812055611dc0565b90506020813d602011611e2c575b81611e1d60209383611fd2565b810103126106d2575138611db9565b3d9150611e10565b611e3f929350612120565b9055611d80565b60405162461bcd60e51b815260206004820152601960248201527f52657061796d656e74207472616e73666572206661696c6564000000000000006044820152606490fd5b611ea4915060203d60201161033b5761032c8183611fd2565b38611d5e565b60405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d08195e18d959591cc81919589d606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721119589d08185b1c9958591e481c995c185a59606a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840c8cac4e840d2dcc8caf60731b6044820152606490fd5b634e487b7160e01b84526021600452602484fd5b600435906001600160a01b038216820361037757565b60a0810190811067ffffffffffffffff821117611fa057604052565b634e487b7160e01b600052604160045260246000fd5b6080810190811067ffffffffffffffff821117611fa057604052565b90601f8019910116810190811067ffffffffffffffff821117611fa057604052565b9190602083019260038210156120075752565b634e487b7160e01b600052602160045260246000fd5b6060906003190112610377576004356001600160a01b038116810361037757906024356001600160a01b0381168103610377579060443590565b8054821015612073576000526005602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b1561209057565b60405162461bcd60e51b815260206004820152600f60248201526e506f6f6c206e6f742061637469766560881b6044820152606490fd5b156120ce57565b60405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b6044820152606490fd5b90816020910312610377575180151581036103775790565b9190820391821161212d57565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff8111611fa05760051b60200190565b80518210156120735760209160051b010190565b9190820180921161212d57565b1561218357565b60405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606490fd5b6020818303126103775780519067ffffffffffffffff821161037757019080601f83011215610377578151906121ee82612143565b926121fc6040519485611fd2565b82845260208085019360051b82010191821161037757602001915b8183106122245750505090565b82516001600160a01b038116810361037757815260209283019201612217565b1561224b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba103330b1ba37b93c9037bbb732b960791b6044820152606490fd5b1561228b57565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c5020746f6b656e7360501b6044820152606490fd5b8181029291811591840414171561212d57565b81156122e6570490565b634e487b7160e01b600052601260045260246000fd5b1561230357565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b1561234f57565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b1561239357565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606490fd5b60018060a01b03169081600052600860205260016040600020015460405163673a2a1f60e01b815260008160048160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561254f57600091612534575b5060005b815181101561252d57306001600160a01b03612459838561215b565b51160361246b575b6001905b0161243d565b602460806001600160a01b03612481848661215b565b5116604051928380926303d3b32360e51b82528a60048301525afa600091816124cd575b506124b35750600190612465565b6001919360206124c59201519061216f565b929050612461565b90916080823d8211612525575b816124e760809383611fd2565b810103126101f257506060604051916124ff83611fb6565b8051835260208101516020840152604081015160408401520151606082015290386124a5565b3d91506124da565b5090925050565b61254991503d806000833e610b9d8183611fd2565b38612439565b6040513d6000823e3d90fd5b906125678115156120c7565b6001600160a01b03821615612b3f5761257f336123d1565b604051634a3a743f60e01b8152336004820152602081602481305afa90811561254f57600091612b0d575b50600354908381101580612b03575b612af757838192106128ac575b5080838110612633575b50826125dd91101561238c565b81116125ee576125ec91612b84565b565b60405162461bcd60e51b815260206004820152601860248201527f4578636565647320636f6c6c61746572616c206c696d697400000000000000006044820152606490fd5b949193929190506126448583612120565b60405163673a2a1f60e01b815290959390926000846004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa93841561254f5760009461288f575b5060005b845181101561287d578715612868576001600160a01b036126bc828761215b565b511630811461285f576040516326d352ab60e11b8152336004820152602081602481855afa6000918161282c575b506126fb5750506001905b0161269b565b6107d08102908082046107d0149015171561212d57612710900489811115612826575088905b604051630abb87c960e11b8152602081600481855afa600091816127f3575b50612750575050506001906126f5565b8280151591826127e8575b505061276c575b50506001906126f5565b803b1561037757604051633ce4a56360e11b815230600482015233602482015260448101839052906000908290606490829084905af190816127d7575b506127b757506001906126f5565b806127c96127cf926001949b9961216f565b97612120565b979038612762565b60006127e291611fd2565b386127a9565b10159050823861275b565b90916020823d821161281e575b8161280d60209383611fd2565b810103126101f25750519038612740565b3d9150612800565b90612721565b90916020823d8211612857575b8161284660209383611fd2565b810103126101f257505190386126ea565b3d9150612839565b506001906126f5565b50936125dd92965084919593505b91506125d0565b50936125dd9296508491959350612876565b6128a59194503d806000833e610b9d8183611fd2565b9238612697565b949193929190506128bd8583612120565b60405163673a2a1f60e01b815290959390926000846004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa93841561254f57600094612ada575b5060005b8451811015612acd578715612abe576001600160a01b03612935828761215b565b5116308114612ab557604051634a3a743f60e01b815233600482015290602082602481845afa60009281612a82575b506129755750506001905b01612914565b604051630abb87c960e11b815291602083600481855afa60009381612a4f575b506129a55750505060019061296f565b8a811115612a4857508980925b101580612a3f575b6129c9575b505060019061296f565b803b15610377576040516317efdd9d60e11b815230600482015233602482015260448101839052906000908290606490829084905af19081612a2e575b50612a14575060019061296f565b806127c9612a26926001949b9961216f565b9790386129bf565b6000612a3991611fd2565b38612a06565b508115156129ba565b80926129b2565b90936020823d8211612a7a575b81612a6960209383611fd2565b810103126101f25750519238612995565b3d9150612a5c565b90926020823d8211612aad575b81612a9c60209383611fd2565b810103126101f25750519138612964565b3d9150612a8f565b5060019061296f565b50939195509391505b386125c6565b5093919550939150612ac7565b612af09194503d806000833e610b9d8183611fd2565b9238612910565b5050506125ec91612b84565b50838210156125b9565b906020823d602011612b37575b81612b2760209383611fd2565b810103126101f2575051386125aa565b3d9150612b1a565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206d65726368616e74206164647265737300000000000000006044820152606490fd5b90600354600090828110613049576002546040516318160ddd60e01b81526001600160a01b039091169190602081600481865afa908115610384578491613017575b50612c075760405162461bcd60e51b81526020600482015260146024820152732737902628103a37b5b2b739903a3790313ab93760611b6044820152606490fd5b6040516318160ddd60e01b8152602081600481865afa908115610384578491612fe3575b50612c43602492612c3e602093886122c9565b6122dc565b92604051928380926370a0823160e01b82523360048301525afa8015610ebd5782908490612fad575b612c7892501015612284565b338252600860205260408220600281018054838110612f685783612c9b91612120565b9055612ca8848254612120565b8082556107d08102908082046107d01490151715610bac5761271060019104910155612cd683600354612120565b6003556002546001600160a01b031690813b156106d257604051632770a7eb60e21b815233600482015260248101919091529082908290604490829084905af18015610342578290612f58575b50503381526009602052604081209260405193612d3f85611f84565b338552602085019460018060a01b03831695868152604082018681526060830191428352608084019487865280549068010000000000000000821015612f445790612d8f91600182018155612057565b949094612f30575184546001600160a01b039182166001600160a01b0319918216178655915160018601805491909216921691909117905551600283015551600382015590516004909101805460ff191691151560ff16919091179055600754612dfa90849061216f565b60075562015180420180421161078e5783612e6392602092338652600a845260408620548111612f1e575b5060015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935291938492909116908290869082906044820190565b03925af1918215612f125791612ef3575b5015612eae576040519081523060208201527f02b13a848a4fdd9c53f7a9eeed12b50ee873fb61eccba06426e80ade0ff0b91860403392a3565b60405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152606490fd5b612f0c915060203d60201161033b5761032c8183611fd2565b38612e74565b604051903d90823e3d90fd5b338652600a8452604086205538612e25565b634e487b7160e01b88526004889052602488fd5b634e487b7160e01b89526041600452602489fd5b612f6191611fd2565b3881612d23565b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e74206d696e746564204c5020746f6b656e730000006044820152606490fd5b50506020813d602011612fdb575b81612fc860209383611fd2565b810103126106d25781612c789151612c6c565b3d9150612fbb565b90506020813d60201161300f575b81612ffe60209383611fd2565b8101031261177b5751612c43612c2b565b3d9150612ff1565b90506020813d602011613041575b8161303260209383611fd2565b8101031261177b575138612bc6565b3d9150613025565b60405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420706f6f6c206c697175696469747900000000006044820152606490fdfea2646970667358221220f10cecac897b348daa64826f46afac22b6ba632e597daddf39ec04be58ee99d064736f6c634300081c003360806040523461035f57610e828038038061001981610364565b92833981019060608183031261035f5780516001600160401b03811161035f5782610045918301610389565b60208201519092906001600160401b03811161035f57604091610069918401610389565b9101516001600160a01b0381169081900361035f576002805460ff1916601217905582516001600160401b03811161026a57600054600181811c91168015610355575b602082101461024a57601f81116102f1575b506020601f821160011461028b5781929394600092610280575b50508160011b916000199060031b1c1916176000555b81516001600160401b03811161026a57600154600181811c91168015610260575b602082101461024a57601f81116101e5575b50602092601f82116001146101805792819293600092610175575b50508160011b916000199060031b1c1916176001555b600680546001600160a01b031916919091179055604051610a8d90816103f58239f35b01519050388061013c565b601f198216936001600052806000209160005b8681106101cd57508360019596106101b4575b505050811b01600155610152565b015160001960f88460031b161c191690553880806101a6565b91926020600181928685015181550194019201610193565b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610240575b601f0160051c01905b8181106102345750610121565b60008155600101610227565b909150819061021e565b634e487b7160e01b600052602260045260246000fd5b90607f169061010f565b634e487b7160e01b600052604160045260246000fd5b0151905038806100d8565b601f1982169060008052806000209160005b8181106102d9575095836001959697106102c0575b505050811b016000556100ee565b015160001960f88460031b161c191690553880806102b2565b9192602060018192868b01518155019401920161029d565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c8101916020841061034b575b601f0160051c01905b81811061033f57506100be565b60008155600101610332565b9091508190610329565b90607f16906100ac565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761026a57604052565b81601f8201121561035f578051906001600160401b03821161026a576103b8601f8301601f1916602001610364565b928284526020838301011161035f5760005b8281106103df57505060206000918301015290565b806020809284010151828287010152016103ca56fe6080604052600436101561001257600080fd5b60003560e01c806306fdde031461060d578063095ea7b3146105e757806318160ddd146105c957806323b872dd14610501578063313ce567146104e057806340c10f19146103f957806370a08231146103bf5780638da5cb5b1461039657806395d89b41146102755780639dc29fac14610127578063a9059cbb146100f65763dd62ed3e146100a057600080fd5b346100f15760403660031901126100f1576100b9610710565b6100c1610726565b6001600160a01b039182166000908152600560209081526040808320949093168252928352819020549051908152f35b600080fd5b346100f15760403660031901126100f15761011c610112610710565b60243590336108c3565b602060405160018152f35b346100f15760403660031901126100f157610140610710565b6024359061015960018060a01b0360065416331461075f565b6001600160a01b031680156102245780600052600460205281604060002054106101d3577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009383855260048252604085206101b982825461073c565b90556101c78160035461073c565b600355604051908152a3005b60405162461bcd60e51b8152602060048201526024808201527f4c5045524332303a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f4c5045524332303a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b346100f15760003660031901126100f1576000604051816001548060011c9060018116801561038c575b6020831081146103785782855290811561035c5750600114610308575b50819003601f01601f1916810167ffffffffffffffff8111828210176102f4576102f09250604052604051918291826106c7565b0390f35b634e487b7160e01b83526041600452602483fd5b600184529050827fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828210610346575060209150820101836102bc565b6001816020925483858801015201910190610331565b90506020925060ff191682840152151560051b820101836102bc565b634e487b7160e01b86526022600452602486fd5b91607f169161029f565b346100f15760003660031901126100f1576006546040516001600160a01b039091168152602090f35b346100f15760203660031901126100f1576001600160a01b036103e0610710565b1660005260046020526020604060002054604051908152f35b346100f15760403660031901126100f157610412610710565b6024359061042b60018060a01b0360065416331461075f565b6001600160a01b0316908115610491577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261046d6000946003546107aa565b60035584845260048252604084206104868282546107aa565b9055604051908152a3005b60405162461bcd60e51b815260206004820152602160248201527f4c5045524332303a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b346100f15760003660031901126100f157602060ff60025416604051908152f35b346100f15760603660031901126100f15761051a610710565b610522610726565b6001600160a01b038216600090815260056020908152604080832033845290915290205491906044358084106105715761011c936105648261056994866108c3565b61073c565b9033906107b7565b60405162461bcd60e51b815260206004820152602a60248201527f4c5045524332303a207472616e7366657220616d6f756e74206578636565647360448201526920616c6c6f77616e636560b01b6064820152608490fd5b346100f15760003660031901126100f1576020600354604051908152f35b346100f15760403660031901126100f15761011c610603610710565b60243590336107b7565b346100f15760003660031901126100f15760006040518182548060011c906001811680156106bd575b6020831081146103785782855290811561035c57506001146106865750819003601f01601f1916810167ffffffffffffffff8111828210176102f4576102f09250604052604051918291826106c7565b90508280526020832083905b8282106106a7575060209150820101836102bc565b6001816020925483858801015201910190610692565b91607f1691610636565b91909160208152825180602083015260005b8181106106fa575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106d9565b600435906001600160a01b03821682036100f157565b602435906001600160a01b03821682036100f157565b9190820391821161074957565b634e487b7160e01b600052601160045260246000fd5b1561076657565b606460405162461bcd60e51b815260206004820152602060248201527f4c5045524332303a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190820180921161074957565b6001600160a01b031690811561086f576001600160a01b031691821561081e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260058252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b8152602060048201526024808201527f4c5045524332303a20617070726f766520746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f4c5045524332303a20617070726f76652066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6001600160a01b0316908115610a02576001600160a01b03169182156109af5781600052600460205280604060002054106109595760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef918360005260048252604060002061093482825461073c565b90558460005260048252604060002061094e8282546107aa565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602860248201527f4c5045524332303a207472616e7366657220616d6f756e7420657863656564736044820152672062616c616e636560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f4c5045524332303a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f4c5045524332303a207472616e736665722066726f6d20746865207a65726f206044820152666164647265737360c81b6064820152608490fdfea26469706673582212201bbefa2c147203deadc328cb59c54baa3d4b57162c5d5825c3907827fbef665d64736f6c634300081c0033a2646970667358221220927f0418614a06e87898d9cdf63015f800cc81dba5a9477e593be602bc6c9b1964736f6c634300081c0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "204:4071:9:-:0;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;-1:-1:-1;204:4071:9;;-1:-1:-1;;;;;;204:4071:9;;;940:10;204:4071;;;;961:42;204:4071;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;204:4071:9;;;;;;-1:-1:-1;204:4071:9;;;;;-1:-1:-1;204:4071:9",
  "deployedSourceMap": "204:4071:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;:::i;:::-;;;;779:68;787:10;-1:-1:-1;;;;;204:4071:9;;787:19;779:68;:::i;:::-;-1:-1:-1;;;;;204:4071:9;;3110:22;;204:4071;;-1:-1:-1;;;;;;204:4071:9;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;;:::i;:::-;779:68;204:4071;;;;;;;;787:10;:19;779:68;:::i;:::-;-1:-1:-1;;;;;204:4071:9;3386:71;3394:25;;;3386:71;:::i;:::-;204:4071;;;;;;3468:83;204:4071;;;;;;:::i;:::-;3476:43;;3468:83;:::i;:::-;3572:41;;;;;204:4071;;;;;;;;;;;;;3572:41;;;;;;;;;;204:4071;;3572:41;;;;;:::i;:::-;204:4071;;3572:41;204:4071;3572:41;204:4071;;;;;;;;;3572:41;204:4071;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;204:4071:9;;;779:68;787:10;:19;;779:68;:::i;:::-;204:4071;;1235:29;204:4071;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1325:12;204:4071;;;;;;;;;;1404:19;204:4071;-1:-1:-1;;;;;204:4071:9;;1404:33;;204:4071;;;;1555:73;;;;;;;;;;;;;;;;;;;;;;;;204:4071;;;;;;;;;:::i;:::-;;;;;;;;;;;1622:4;204:4071;;;1555:73;;;;;;;;204:4071;;;;;;1713:5;204:4071;;;;;;;;1713:5;204:4071;;;1713:5;204:4071;;:::i;:::-;;;;1325:12;204:4071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1325:12;204:4071;;;;;;1713:5;204:4071;;;;;;;;;;;;;;;;;;;;;1555:73;204:4071;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:5;204:4071;;;;;1325:12;204:4071;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1828:12;204:4071;;;;;;;;;;;;;;;;1885:49;204:4071;;;;;787:10;204:4071;787:10;204:4071;;;;;;:::i;:::-;1885:49;;;204:4071;;;;;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;;;;;;1713:5;204:4071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1325:12;204:4071;;;;;;;;;;;;;;;;;;;;;;;1713:5;204:4071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:5;204:4071;;;;;;-1:-1:-1;204:4071:9;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;1555:73;-1:-1:-1;;;204:4071:9;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;;;;259:22;;;;;204:4071;259:22;;;:::i;:::-;204:4071;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;476:46;204:4071;;;;;;;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;;;;;;;;;;;;;2257:5;204:4071;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;;;;;;;;;;;;;;;;;;2090:5;204:4071;;;;;;;;2090:5;204:4071;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;-1:-1:-1;204:4071:9;;;;;;;;;2090:5;204:4071;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;2090:5;204:4071;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;-1:-1:-1;;;;;204:4071:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;204:4071:9;;;;;;;-1:-1:-1;204:4071:9;;-1:-1:-1;204:4071:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:34;204:4071;;;-1:-1:-1;;;;;204:4071:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;2466:12;204:4071;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;:::i;:::-;;;;779:68;204:4071;;;;;;;;787:10;:19;779:68;:::i;:::-;-1:-1:-1;;;;;204:4071:9;3801:71;3809:25;;;3801:71;:::i;:::-;204:4071;;;;;;3883:83;204:4071;;;;;;:::i;3883:83::-;3985:10;;204:4071;;;;;;;;;;;4137:19;204:4071;;4130:73;204:4071;;;;;;;;;4130:73;;787:10;204:4071;4130:73;;204:4071;;;;;;;;;;;4130:73;;;;;;;;204:4071;4214:50;;;;;;204:4071;;;;;;;;;;;;;;;4214:50;;204:4071;4214:50;;204:4071;4214:50;;;;;;;;204:4071;;4214:50;;;;:::i;:::-;;;204:4071;;4214:50;204:4071;;;;;;;;;;;4214:50;204:4071;;;4130:73;204:4071;4130:73;;204:4071;4130:73;;;;;;204:4071;4130:73;;;:::i;:::-;;;204:4071;;;;;;;;;;4130:73;204:4071;;;;;;4130:73;;;-1:-1:-1;4130:73:9;;;204:4071;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;;:::i;:::-;779:68;204:4071;;;;;;;;787:10;:19;779:68;:::i;:::-;-1:-1:-1;;;;;204:4071:9;2758:34;;204:4071;;2842:42;204:4071;;-1:-1:-1;;;;;;204:4071:9;;;;;2900:41;;;;204:4071;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;373:43;204:4071;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;204:4071:9;;;;;-1:-1:-1;204:4071:9;;;-1:-1:-1;;204:4071:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;204:4071:9;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;204:4071:9;;;;;;;;;;-1:-1:-1;;204:4071:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;204:4071:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;204:4071:9;;;;:::o;:::-;259:22;204:4071;;;;;;259:22;-1:-1:-1;204:4071:9;;-1:-1:-1;204:4071:9;;;-1:-1:-1;204:4071:9;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;204:4071:9;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"./LiquidityPool.sol\";\r\n\r\n/**\r\n * @title PoolFactory\r\n * @dev Factory contract for creating and managing regional liquidity pools\r\n */\r\ncontract PoolFactory {\r\n    address public owner;\r\n    address[] public pools;\r\n    address public stakingTokenAddress; // Global staking token for all pools\r\n    \r\n    mapping(string => bool) public regionExists;\r\n    mapping(address => string) public poolToRegion;\r\n    mapping(string => address) public regionToPool;\r\n    \r\n    event PoolCreated(\r\n        address indexed poolAddress, \r\n        string regionName, \r\n        address indexed createdBy\r\n    );\r\n    \r\n    event StakingTokenUpdated(address indexed newStakingToken);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"PoolFactory: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    constructor(address _stakingTokenAddress) {\r\n        owner = msg.sender;\r\n        stakingTokenAddress = _stakingTokenAddress;\r\n    }\r\n    \r\n    /**\r\n     * @dev Creates a new liquidity pool for a region\r\n     * @param _regionName Name of the region for the pool\r\n     */\r\n   function createPool(string memory _regionName) external onlyOwner {\r\n    require(bytes(_regionName).length > 0, \"PoolFactory: region name cannot be empty\");\r\n    require(!regionExists[_regionName], \"PoolFactory: region already exists\");\r\n    require(stakingTokenAddress != address(0), \"PoolFactory: staking token not set\");\r\n    \r\n    // Deploy new LiquidityPool contract\r\n    LiquidityPool newPool = new LiquidityPool(_regionName, owner, stakingTokenAddress, address(this));\r\n    \r\n    address poolAddress = address(newPool);\r\n    \r\n    // Update state\r\n    pools.push(poolAddress);\r\n    regionExists[_regionName] = true;\r\n    poolToRegion[poolAddress] = _regionName;\r\n    regionToPool[_regionName] = poolAddress;\r\n    \r\n    emit PoolCreated(poolAddress, _regionName, msg.sender);\r\n}\r\n    /**\r\n     * @dev Returns all deployed pool addresses\r\n     */\r\n    function getPools() external view returns (address[] memory) {\r\n        return pools;\r\n    }\r\n    \r\n    /**\r\n     * @dev Returns the number of deployed pools\r\n     */\r\n    function getPoolCount() external view returns (uint256) {\r\n        return pools.length;\r\n    }\r\n    \r\n    /**\r\n     * @dev Returns pool address for a specific region\r\n     */\r\n    function getPoolByRegion(string memory _regionName) external view returns (address) {\r\n        require(regionExists[_regionName], \"PoolFactory: region does not exist\");\r\n        return regionToPool[_regionName];\r\n    }\r\n    \r\n    /**\r\n     * @dev Updates the global staking token address\r\n     */\r\n    function setStakingToken(address _stakingTokenAddress) external onlyOwner {\r\n        require(_stakingTokenAddress != address(0), \"PoolFactory: invalid token address\");\r\n        stakingTokenAddress = _stakingTokenAddress;\r\n        emit StakingTokenUpdated(_stakingTokenAddress);\r\n    }\r\n    \r\n    /**\r\n     * @dev Transfers ownership of the factory\r\n     */\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        require(newOwner != address(0), \"PoolFactory: new owner is the zero address\");\r\n        owner = newOwner;\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency function to pause/unpause a specific pool\r\n     */\r\n    function togglePoolStatus(address poolAddress) external onlyOwner {\r\n        require(poolAddress != address(0), \"PoolFactory: invalid pool address\");\r\n        require(bytes(poolToRegion[poolAddress]).length > 0, \"PoolFactory: pool not found\");\r\n        \r\n        LiquidityPool(poolAddress).toggleStatus();\r\n    }\r\n    \r\n    /**\r\n     * @dev Add rewards to a specific pool's reward pot\r\n     */\r\n    function addRewardsToPool(address poolAddress, uint256 amount) external onlyOwner {\r\n        require(poolAddress != address(0), \"PoolFactory: invalid pool address\");\r\n        require(bytes(poolToRegion[poolAddress]).length > 0, \"PoolFactory: pool not found\");\r\n        require(amount > 0, \"PoolFactory: amount must be greater than 0\");\r\n        \r\n        // Transfer staking tokens from factory owner to the pool\r\n        IERC20(stakingTokenAddress).transferFrom(msg.sender, poolAddress, amount);\r\n        LiquidityPool(poolAddress).addRewardsToPot(amount);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\ANMOL\\OneDrive\\Desktop\\AMAZON HACKON\\Ageis-Blockchain\\truffle-project\\contracts\\PoolFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/PoolFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        1011
      ],
      "ILiquidityPool": [
        1459
      ],
      "IPoolFactory": [
        1399
      ],
      "LPERC20": [
        1388
      ],
      "LiquidityPool": [
        3331
      ],
      "PoolFactory": [
        3671
      ],
      "Stake": [
        1408
      ]
    },
    "id": 3672,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3333,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:9"
      },
      {
        "absolutePath": "project:/contracts/LiquidityPool.sol",
        "file": "./LiquidityPool.sol",
        "id": 3334,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3672,
        "sourceUnit": 3332,
        "src": "61:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PoolFactory",
        "contractDependencies": [
          3331
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3335,
          "nodeType": "StructuredDocumentation",
          "src": "94:108:9",
          "text": " @title PoolFactory\n @dev Factory contract for creating and managing regional liquidity pools"
        },
        "fullyImplemented": true,
        "id": 3671,
        "linearizedBaseContracts": [
          3671
        ],
        "name": "PoolFactory",
        "nameLocation": "213:11:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3337,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "247:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "232:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ac4afa38",
            "id": 3340,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "276:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "259:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3338,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "259:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3339,
              "nodeType": "ArrayTypeName",
              "src": "259:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5298b869",
            "id": 3342,
            "mutability": "mutable",
            "name": "stakingTokenAddress",
            "nameLocation": "303:19:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "288:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01d48605",
            "id": 3346,
            "mutability": "mutable",
            "name": "regionExists",
            "nameLocation": "404:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "373:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 3345,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3343,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "381:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "373:23:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3344,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "391:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6282d7ec",
            "id": 3350,
            "mutability": "mutable",
            "name": "poolToRegion",
            "nameLocation": "457:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "423:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 3349,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3347,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "431:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "423:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3348,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "442:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "996eebbd",
            "id": 3354,
            "mutability": "mutable",
            "name": "regionToPool",
            "nameLocation": "510:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 3671,
            "src": "476:46:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 3353,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3351,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "484:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "476:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3352,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "494:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "8f593eb1efa9325b878783797a652bd79616978dc4d101da8c0c04df88b39808",
            "id": 3362,
            "name": "PoolCreated",
            "nameLocation": "541:11:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "579:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "563:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "regionName",
                  "nameLocation": "609:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "602:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "createdBy",
                  "nameLocation": "647:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "631:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "552:111:9"
            },
            "src": "535:129:9"
          },
          {
            "anonymous": false,
            "eventSelector": "08d9e26510a3cb1d512e4122208b8399da71fdde379ed7801f26cc073be0cad2",
            "id": 3366,
            "name": "StakingTokenUpdated",
            "nameLocation": "682:19:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newStakingToken",
                  "nameLocation": "718:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3366,
                  "src": "702:31:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:33:9"
            },
            "src": "676:59:9"
          },
          {
            "body": {
              "id": 3377,
              "nodeType": "Block",
              "src": "768:99:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "787:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "791:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "787:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3371,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3337,
                          "src": "801:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "787:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "808:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79d35e5bed534eee78b45c702989f139b707c86fd833553e669e7403b4086d45",
                          "typeString": "literal_string \"PoolFactory: caller is not the owner\""
                        },
                        "value": "PoolFactory: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79d35e5bed534eee78b45c702989f139b707c86fd833553e669e7403b4086d45",
                          "typeString": "literal_string \"PoolFactory: caller is not the owner\""
                        }
                      ],
                      "id": 3368,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "779:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3375,
                  "nodeType": "ExpressionStatement",
                  "src": "779:68:9"
                },
                {
                  "id": 3376,
                  "nodeType": "PlaceholderStatement",
                  "src": "858:1:9"
                }
              ]
            },
            "id": 3378,
            "name": "onlyOwner",
            "nameLocation": "756:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:2:9"
            },
            "src": "747:120:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "921:90:9",
              "statements": [
                {
                  "expression": {
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3383,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3337,
                      "src": "932:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3384,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "940:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "944:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "940:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "932:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3387,
                  "nodeType": "ExpressionStatement",
                  "src": "932:18:9"
                },
                {
                  "expression": {
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3388,
                      "name": "stakingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3342,
                      "src": "961:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3389,
                      "name": "_stakingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "983:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "961:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3391,
                  "nodeType": "ExpressionStatement",
                  "src": "961:42:9"
                }
              ]
            },
            "id": 3393,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3380,
                  "mutability": "mutable",
                  "name": "_stakingTokenAddress",
                  "nameLocation": "899:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "891:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:30:9"
            },
            "returnParameters": {
              "id": 3382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:9"
            },
            "scope": 3671,
            "src": "879:132:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3483,
              "nodeType": "Block",
              "src": "1220:718:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3404,
                                "name": "_regionName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3396,
                                "src": "1241:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 3403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1235:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 3402,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1235:5:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1235:18:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 3406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1254:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1235:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1263:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1235:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20726567696f6e206e616d652063616e6e6f7420626520656d707479",
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18bb10db79dc82f2c62bd399fd7428cacc9f561d88f1ff69a045df20fe261727",
                          "typeString": "literal_string \"PoolFactory: region name cannot be empty\""
                        },
                        "value": "PoolFactory: region name cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18bb10db79dc82f2c62bd399fd7428cacc9f561d88f1ff69a045df20fe261727",
                          "typeString": "literal_string \"PoolFactory: region name cannot be empty\""
                        }
                      ],
                      "id": 3401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1227:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1227:82:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3411,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:82:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1324:26:9",
                        "subExpression": {
                          "baseExpression": {
                            "id": 3413,
                            "name": "regionExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3346,
                            "src": "1325:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 3415,
                          "indexExpression": {
                            "id": 3414,
                            "name": "_regionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3396,
                            "src": "1338:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1325:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20726567696f6e20616c726561647920657869737473",
                        "id": 3417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_406feb8a9564826edba57f17c4a1438b0b200eaf23bb996e55badec1f6952dc0",
                          "typeString": "literal_string \"PoolFactory: region already exists\""
                        },
                        "value": "PoolFactory: region already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_406feb8a9564826edba57f17c4a1438b0b200eaf23bb996e55badec1f6952dc0",
                          "typeString": "literal_string \"PoolFactory: region already exists\""
                        }
                      ],
                      "id": 3412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1316:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3419,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:73:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3421,
                          "name": "stakingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3342,
                          "src": "1404:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1435:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1427:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3422,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1427:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1404:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a207374616b696e6720746f6b656e206e6f7420736574",
                        "id": 3427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1439:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5da8ce8e01e798e25de0b7772c19cb894018894a28bf61af90fb2104bdee2834",
                          "typeString": "literal_string \"PoolFactory: staking token not set\""
                        },
                        "value": "PoolFactory: staking token not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5da8ce8e01e798e25de0b7772c19cb894018894a28bf61af90fb2104bdee2834",
                          "typeString": "literal_string \"PoolFactory: staking token not set\""
                        }
                      ],
                      "id": 3420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1396:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3429,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:80:9"
                },
                {
                  "assignments": [
                    3432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3432,
                      "mutability": "mutable",
                      "name": "newPool",
                      "nameLocation": "1545:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "1531:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                        "typeString": "contract LiquidityPool"
                      },
                      "typeName": {
                        "id": 3431,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3430,
                          "name": "LiquidityPool",
                          "nameLocations": [
                            "1531:13:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3331,
                          "src": "1531:13:9"
                        },
                        "referencedDeclaration": 3331,
                        "src": "1531:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3436,
                        "name": "_regionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3396,
                        "src": "1573:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3437,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3337,
                        "src": "1586:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3438,
                        "name": "stakingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3342,
                        "src": "1593:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3441,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1622:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolFactory_$3671",
                              "typeString": "contract PoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolFactory_$3671",
                              "typeString": "contract PoolFactory"
                            }
                          ],
                          "id": 3440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1614:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1614:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1614:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1555:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_LiquidityPool_$3331_$",
                        "typeString": "function (string memory,address,address,address) returns (contract LiquidityPool)"
                      },
                      "typeName": {
                        "id": 3434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3433,
                          "name": "LiquidityPool",
                          "nameLocations": [
                            "1559:13:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3331,
                          "src": "1559:13:9"
                        },
                        "referencedDeclaration": 3331,
                        "src": "1559:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1555:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1531:97:9"
                },
                {
                  "assignments": [
                    3446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3446,
                      "mutability": "mutable",
                      "name": "poolAddress",
                      "nameLocation": "1649:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 3483,
                      "src": "1641:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3445,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1641:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3449,
                        "name": "newPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3432,
                        "src": "1671:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      ],
                      "id": 3448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1663:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3447,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1663:7:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1641:38:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3455,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "1724:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3452,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3340,
                        "src": "1713:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1719:4:9",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1713:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:23:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3457,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:23:9"
                },
                {
                  "expression": {
                    "id": 3462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3458,
                        "name": "regionExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3346,
                        "src": "1743:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 3460,
                      "indexExpression": {
                        "id": 3459,
                        "name": "_regionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3396,
                        "src": "1756:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1743:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1771:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1743:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3463,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:32:9"
                },
                {
                  "expression": {
                    "id": 3468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3464,
                        "name": "poolToRegion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3350,
                        "src": "1782:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 3466,
                      "indexExpression": {
                        "id": 3465,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "1795:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1782:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3467,
                      "name": "_regionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3396,
                      "src": "1810:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1782:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3469,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:39:9"
                },
                {
                  "expression": {
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3470,
                        "name": "regionToPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "1828:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3472,
                      "indexExpression": {
                        "id": 3471,
                        "name": "_regionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3396,
                        "src": "1841:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1828:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3473,
                      "name": "poolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3446,
                      "src": "1856:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1828:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3475,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:39:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3477,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3446,
                        "src": "1897:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3478,
                        "name": "_regionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3396,
                        "src": "1910:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 3479,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1923:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1927:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1923:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3476,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3362,
                      "src": "1885:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,string memory,address)"
                      }
                    },
                    "id": 3481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3482,
                  "nodeType": "EmitStatement",
                  "src": "1880:54:9"
                }
              ]
            },
            "documentation": {
              "id": 3394,
              "nodeType": "StructuredDocumentation",
              "src": "1023:126:9",
              "text": " @dev Creates a new liquidity pool for a region\n @param _regionName Name of the region for the pool"
            },
            "functionSelector": "d0d13036",
            "id": 3484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3399,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3398,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1210:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3378,
                  "src": "1210:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1210:9:9"
              }
            ],
            "name": "createPool",
            "nameLocation": "1163:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3396,
                  "mutability": "mutable",
                  "name": "_regionName",
                  "nameLocation": "1188:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "1174:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1173:27:9"
            },
            "returnParameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:0:9"
            },
            "scope": 3671,
            "src": "1154:784:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3493,
              "nodeType": "Block",
              "src": "2072:31:9",
              "statements": [
                {
                  "expression": {
                    "id": 3491,
                    "name": "pools",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3340,
                    "src": "2090:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3490,
                  "id": 3492,
                  "nodeType": "Return",
                  "src": "2083:12:9"
                }
              ]
            },
            "documentation": {
              "id": 3485,
              "nodeType": "StructuredDocumentation",
              "src": "1944:61:9",
              "text": " @dev Returns all deployed pool addresses"
            },
            "functionSelector": "673a2a1f",
            "id": 3494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPools",
            "nameLocation": "2020:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:2:9"
            },
            "returnParameters": {
              "id": 3490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3489,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3494,
                  "src": "2054:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3487,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2054:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3488,
                    "nodeType": "ArrayTypeName",
                    "src": "2054:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2053:18:9"
            },
            "scope": 3671,
            "src": "2011:92:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3503,
              "nodeType": "Block",
              "src": "2239:38:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3500,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3340,
                      "src": "2257:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 3501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2263:6:9",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2257:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3499,
                  "id": 3502,
                  "nodeType": "Return",
                  "src": "2250:19:9"
                }
              ]
            },
            "documentation": {
              "id": 3495,
              "nodeType": "StructuredDocumentation",
              "src": "2115:62:9",
              "text": " @dev Returns the number of deployed pools"
            },
            "functionSelector": "8eec5d70",
            "id": 3504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolCount",
            "nameLocation": "2192:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2204:2:9"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3504,
                  "src": "2230:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2229:9:9"
            },
            "scope": 3671,
            "src": "2183:94:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3523,
              "nodeType": "Block",
              "src": "2447:134:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3513,
                          "name": "regionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3346,
                          "src": "2466:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                            "typeString": "mapping(string memory => bool)"
                          }
                        },
                        "id": 3515,
                        "indexExpression": {
                          "id": 3514,
                          "name": "_regionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3507,
                          "src": "2479:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2466:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20726567696f6e20646f6573206e6f74206578697374",
                        "id": 3516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2493:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fa274ff4c245451ebcffc7786ed603a8e946b9ac2f4234013ef9f71d4d9a71c",
                          "typeString": "literal_string \"PoolFactory: region does not exist\""
                        },
                        "value": "PoolFactory: region does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fa274ff4c245451ebcffc7786ed603a8e946b9ac2f4234013ef9f71d4d9a71c",
                          "typeString": "literal_string \"PoolFactory: region does not exist\""
                        }
                      ],
                      "id": 3512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2458:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:72:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3518,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:72:9"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3519,
                      "name": "regionToPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3354,
                      "src": "2548:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 3521,
                    "indexExpression": {
                      "id": 3520,
                      "name": "_regionName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3507,
                      "src": "2561:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2548:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3511,
                  "id": 3522,
                  "nodeType": "Return",
                  "src": "2541:32:9"
                }
              ]
            },
            "documentation": {
              "id": 3505,
              "nodeType": "StructuredDocumentation",
              "src": "2289:68:9",
              "text": " @dev Returns pool address for a specific region"
            },
            "functionSelector": "45a79e26",
            "id": 3524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolByRegion",
            "nameLocation": "2372:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "_regionName",
                  "nameLocation": "2402:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3524,
                  "src": "2388:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2387:27:9"
            },
            "returnParameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3524,
                  "src": "2438:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2437:9:9"
            },
            "scope": 3671,
            "src": "2363:218:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3550,
              "nodeType": "Block",
              "src": "2739:210:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3533,
                          "name": "_stakingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3527,
                          "src": "2758:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2790:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2782:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3534,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2782:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2782:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2758:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20696e76616c696420746f6b656e2061646472657373",
                        "id": 3539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2794:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6971adb3175b54d88031f2a0b3cade97db029fa55e35cd78fd6b03d8de7dc479",
                          "typeString": "literal_string \"PoolFactory: invalid token address\""
                        },
                        "value": "PoolFactory: invalid token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6971adb3175b54d88031f2a0b3cade97db029fa55e35cd78fd6b03d8de7dc479",
                          "typeString": "literal_string \"PoolFactory: invalid token address\""
                        }
                      ],
                      "id": 3532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2750:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:81:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3541,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:81:9"
                },
                {
                  "expression": {
                    "id": 3544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3542,
                      "name": "stakingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3342,
                      "src": "2842:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3543,
                      "name": "_stakingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3527,
                      "src": "2864:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2842:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3545,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:42:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3547,
                        "name": "_stakingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3527,
                        "src": "2920:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3546,
                      "name": "StakingTokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3366,
                      "src": "2900:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3549,
                  "nodeType": "EmitStatement",
                  "src": "2895:46:9"
                }
              ]
            },
            "documentation": {
              "id": 3525,
              "nodeType": "StructuredDocumentation",
              "src": "2593:66:9",
              "text": " @dev Updates the global staking token address"
            },
            "functionSelector": "1e9b12ef",
            "id": 3551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3529,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2729:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3378,
                  "src": "2729:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2729:9:9"
              }
            ],
            "name": "setStakingToken",
            "nameLocation": "2674:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "_stakingTokenAddress",
                  "nameLocation": "2698:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3551,
                  "src": "2690:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2689:30:9"
            },
            "returnParameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2739:0:9"
            },
            "scope": 3671,
            "src": "2665:284:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3573,
              "nodeType": "Block",
              "src": "3091:123:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3560,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3554,
                          "src": "3110:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3130:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3122:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3561,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3122:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3122:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3110:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 3566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3134:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2dc5ee82e7f25d0c951ee940f6387243680ebe5f75208b36582b877844caa5dd",
                          "typeString": "literal_string \"PoolFactory: new owner is the zero address\""
                        },
                        "value": "PoolFactory: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2dc5ee82e7f25d0c951ee940f6387243680ebe5f75208b36582b877844caa5dd",
                          "typeString": "literal_string \"PoolFactory: new owner is the zero address\""
                        }
                      ],
                      "id": 3559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3102:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3102:77:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3568,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:77:9"
                },
                {
                  "expression": {
                    "id": 3571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3569,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3337,
                      "src": "3190:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3570,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3554,
                      "src": "3198:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3190:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3572,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:16:9"
                }
              ]
            },
            "documentation": {
              "id": 3552,
              "nodeType": "StructuredDocumentation",
              "src": "2961:60:9",
              "text": " @dev Transfers ownership of the factory"
            },
            "functionSelector": "f2fde38b",
            "id": 3574,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3557,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3556,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3081:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3378,
                  "src": "3081:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3081:9:9"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "3036:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3554,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "3062:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3574,
                  "src": "3054:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3053:18:9"
            },
            "returnParameters": {
              "id": 3558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3091:0:9"
            },
            "scope": 3671,
            "src": "3027:187:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3611,
              "nodeType": "Block",
              "src": "3375:246:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3583,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3577,
                          "src": "3394:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3417:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3409:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3584,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3409:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3409:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3394:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20696e76616c696420706f6f6c2061646472657373",
                        "id": 3589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3421:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281d29a41fbb78c5ee1377f7f0a14f4aff5b6003199891a6dc94ca8109df85e4",
                          "typeString": "literal_string \"PoolFactory: invalid pool address\""
                        },
                        "value": "PoolFactory: invalid pool address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281d29a41fbb78c5ee1377f7f0a14f4aff5b6003199891a6dc94ca8109df85e4",
                          "typeString": "literal_string \"PoolFactory: invalid pool address\""
                        }
                      ],
                      "id": 3582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3386:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3386:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "3386:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3595,
                                  "name": "poolToRegion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3350,
                                  "src": "3482:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                    "typeString": "mapping(address => string storage ref)"
                                  }
                                },
                                "id": 3597,
                                "indexExpression": {
                                  "id": 3596,
                                  "name": "poolAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3577,
                                  "src": "3495:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3482:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 3594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3476:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 3593,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3476:5:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3476:32:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 3599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3509:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3476:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3518:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3476:43:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20706f6f6c206e6f7420666f756e64",
                        "id": 3602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c076f652733fda836147f1ada781655590f630ae78a38d3a913c3f1259ec0440",
                          "typeString": "literal_string \"PoolFactory: pool not found\""
                        },
                        "value": "PoolFactory: pool not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c076f652733fda836147f1ada781655590f630ae78a38d3a913c3f1259ec0440",
                          "typeString": "literal_string \"PoolFactory: pool not found\""
                        }
                      ],
                      "id": 3592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3468:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3468:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3604,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:83:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3606,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3577,
                            "src": "3586:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3605,
                          "name": "LiquidityPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3331,
                          "src": "3572:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityPool_$3331_$",
                            "typeString": "type(contract LiquidityPool)"
                          }
                        },
                        "id": 3607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3572:26:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3599:12:9",
                      "memberName": "toggleStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1874,
                      "src": "3572:39:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3572:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:41:9"
                }
              ]
            },
            "documentation": {
              "id": 3575,
              "nodeType": "StructuredDocumentation",
              "src": "3226:77:9",
              "text": " @dev Emergency function to pause/unpause a specific pool"
            },
            "functionSelector": "d5fe55c2",
            "id": 3612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3580,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3579,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3365:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3378,
                  "src": "3365:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3365:9:9"
              }
            ],
            "name": "togglePoolStatus",
            "nameLocation": "3318:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3577,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "3343:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "3335:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:21:9"
            },
            "returnParameters": {
              "id": 3581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3375:0:9"
            },
            "scope": 3671,
            "src": "3309:312:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3669,
              "nodeType": "Block",
              "src": "3790:482:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3623,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3615,
                          "src": "3809:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3832:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3824:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3824:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3824:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3809:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20696e76616c696420706f6f6c2061646472657373",
                        "id": 3629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3836:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281d29a41fbb78c5ee1377f7f0a14f4aff5b6003199891a6dc94ca8109df85e4",
                          "typeString": "literal_string \"PoolFactory: invalid pool address\""
                        },
                        "value": "PoolFactory: invalid pool address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_281d29a41fbb78c5ee1377f7f0a14f4aff5b6003199891a6dc94ca8109df85e4",
                          "typeString": "literal_string \"PoolFactory: invalid pool address\""
                        }
                      ],
                      "id": 3622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3801:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3801:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3631,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3635,
                                  "name": "poolToRegion",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3350,
                                  "src": "3897:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                    "typeString": "mapping(address => string storage ref)"
                                  }
                                },
                                "id": 3637,
                                "indexExpression": {
                                  "id": 3636,
                                  "name": "poolAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3615,
                                  "src": "3910:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3897:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 3634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3891:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 3633,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3891:5:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3891:32:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 3639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3924:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3891:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3933:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3891:43:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20706f6f6c206e6f7420666f756e64",
                        "id": 3642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3936:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c076f652733fda836147f1ada781655590f630ae78a38d3a913c3f1259ec0440",
                          "typeString": "literal_string \"PoolFactory: pool not found\""
                        },
                        "value": "PoolFactory: pool not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c076f652733fda836147f1ada781655590f630ae78a38d3a913c3f1259ec0440",
                          "typeString": "literal_string \"PoolFactory: pool not found\""
                        }
                      ],
                      "id": 3632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3883:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3644,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:83:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3646,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "3985:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3994:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3985:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c466163746f72793a20616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 3649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3997:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e42f619df63493820173e88d15d5ee7c1e65279a573768f4769e2474186fcf5",
                          "typeString": "literal_string \"PoolFactory: amount must be greater than 0\""
                        },
                        "value": "PoolFactory: amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e42f619df63493820173e88d15d5ee7c1e65279a573768f4769e2474186fcf5",
                          "typeString": "literal_string \"PoolFactory: amount must be greater than 0\""
                        }
                      ],
                      "id": 3645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3977:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:65:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3651,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:65:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3656,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4171:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4175:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4171:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3658,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "4183:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3659,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "4196:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3653,
                            "name": "stakingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3342,
                            "src": "4137:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3652,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "4130:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1011_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:27:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1011",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4158:12:9",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1010,
                      "src": "4130:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:73:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3666,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "4257:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3663,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3615,
                            "src": "4228:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3662,
                          "name": "LiquidityPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3331,
                          "src": "4214:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LiquidityPool_$3331_$",
                            "typeString": "type(contract LiquidityPool)"
                          }
                        },
                        "id": 3664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4214:26:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPool_$3331",
                          "typeString": "contract LiquidityPool"
                        }
                      },
                      "id": 3665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4241:15:9",
                      "memberName": "addRewardsToPot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1937,
                      "src": "4214:42:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3668,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:50:9"
                }
              ]
            },
            "documentation": {
              "id": 3613,
              "nodeType": "StructuredDocumentation",
              "src": "3633:69:9",
              "text": " @dev Add rewards to a specific pool's reward pot"
            },
            "functionSelector": "2e641b5a",
            "id": 3670,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3619,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3780:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3378,
                  "src": "3780:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3780:9:9"
              }
            ],
            "name": "addRewardsToPool",
            "nameLocation": "3717:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3615,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "3742:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "3734:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3617,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3763:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3670,
                  "src": "3755:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3755:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3733:37:9"
            },
            "returnParameters": {
              "id": 3621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3790:0:9"
            },
            "scope": 3671,
            "src": "3708:564:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3672,
        "src": "204:4071:9",
        "usedErrors": [],
        "usedEvents": [
          3362,
          3366
        ]
      }
    ],
    "src": "33:4242:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.28+commit.7893614a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8f593eb1efa9325b878783797a652bd79616978dc4d101da8c0c04df88b39808": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "regionName",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            }
          ],
          "name": "PoolCreated",
          "type": "event"
        },
        "0x08d9e26510a3cb1d512e4122208b8399da71fdde379ed7801f26cc073be0cad2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newStakingToken",
              "type": "address"
            }
          ],
          "name": "StakingTokenUpdated",
          "type": "event"
        },
        "0xce46f1045250341b6f23866aa2d16f59b9c51318ce305e1952ab3d539df25c14": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "relatedPool",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "name": "RelatedPoolLinkFailed",
          "type": "event"
        }
      },
      "links": {
        "CrossPoolLib": "0x1b273e3E72fDc8B2eC58a8c3221aAC418aA1Aa27",
        "DebtLib": "0x2716a0F8e3Fc521294C736604f72AF1f0AF1440f"
      },
      "address": "0x0d13e5ed1971DEe58Cd02deb2F26E12f77D6180A",
      "transactionHash": "0xeb3255254ba33072132fa8325335c93537407edc6ec4e0c464fa2b17830ddbb9"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-06-20T20:01:45.020Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Factory contract for creating and managing regional liquidity pools",
    "kind": "dev",
    "methods": {
      "addRewardsToPool(address,uint256)": {
        "details": "Add rewards to a specific pool's reward pot"
      },
      "createPool(string)": {
        "details": "Creates a new liquidity pool for a region",
        "params": {
          "_regionName": "Name of the region for the pool"
        }
      },
      "getPoolByRegion(string)": {
        "details": "Returns pool address for a specific region"
      },
      "getPoolCount()": {
        "details": "Returns the number of deployed pools"
      },
      "getPools()": {
        "details": "Returns all deployed pool addresses"
      },
      "setStakingToken(address)": {
        "details": "Updates the global staking token address"
      },
      "togglePoolStatus(address)": {
        "details": "Emergency function to pause/unpause a specific pool"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the factory"
      }
    },
    "title": "PoolFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}