{
  "contractName": "SimpleStakingToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InitialTokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InitialTokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple ERC20 token for testing and development purposes This token can be minted by the owner and used as a staking token Automatically mints tokens to users on their first interaction\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"InitialTokensMinted(address,uint256)\":{\"details\":\"Emitted when initial tokens are minted to a user\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns tokens from the caller's balance\",\"params\":{\"amount\":\"The amount of tokens to burn (in wei)\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns tokens from a specified address (requires allowance)\",\"params\":{\"amount\":\"The amount of tokens to burn (in wei)\",\"from\":\"The address to burn tokens from\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation.\"},\"mint(address,uint256)\":{\"details\":\"Mints tokens to a specified address (only owner)\",\"params\":{\"amount\":\"The amount of tokens to mint (in wei)\",\"to\":\"The address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Overrides ERC20 transfer to include automatic minting\",\"params\":{\"amount\":\"The amount of tokens to transfer (in wei)\",\"recipient\":\"The address to transfer tokens to\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides ERC20 transferFrom to include automatic minting\",\"params\":{\"amount\":\"The amount of tokens to transfer (in wei)\",\"recipient\":\"The address to transfer tokens to\",\"sender\":\"The address to transfer tokens from\"}},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer ownership of the contract\"}},\"title\":\"SimpleStakingToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SimpleStakingToken.sol\":\"SimpleStakingToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/SimpleStakingToken.sol\":{\"keccak256\":\"0xe0ee555b22d11287edd27c92d9ec299f5f7f4068c98eec5d006cfac5580e927a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ab9a064408c505ccd823f3a49cc8240b079d7deab88e35598905a8667244bd1\",\"dweb:/ipfs/QmW1y3FFkCs5HN5tUKKpfxrp2EiAxUTcmswKsdG6SpNSkK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146106ab57508063095ea7b31461068557806318160ddd1461066757806323b872dd14610571578063313ce5671461054d57806340c10f19146104fa57806342966c68146104d457806370a082311461049a578063715018a61461043d57806379cc6790146103665780638da5cb5b1461033d57806395d89b411461021c578063a9059cbb146101e2578063dd62ed3e146101915763f2fde38b146100c457600080fd5b3461018c57602036600319011261018c576100dd6107c7565b6100e5610884565b6001600160a01b0316801561013857600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b3461018c57604036600319011261018c576101aa6107c7565b6101b26107dd565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b3461018c57604036600319011261018c576102116101fe6107c7565b610207336107f3565b60243590336109ab565b602060405160018152f35b3461018c57600036600319011261018c5760405160006004548060011c90600181168015610333575b60208310811461031f5782855290811561030357506001146102ac575b50819003601f01601f191681019067ffffffffffffffff821181831017610296576102928291826040528261077e565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106102ed57506020915082010182610262565b60018160209254838588010152019101906102d8565b90506020925060ff191682840152151560051b82010182610262565b634e487b7160e01b84526022600452602484fd5b91607f1691610245565b3461018c57600036600319011261018c576005546040516001600160a01b039091168152602090f35b3461018c57604036600319011261018c5761037f6107c7565b60243561038b336107f3565b6001600160a01b0382166000908152600160209081526040808320338452909152902054918183106103ec578183039283116103d6576103cf6103d4933383610944565b6108ad565b005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608490fd5b3461018c57600036600319011261018c57610456610884565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461018c57602036600319011261018c576001600160a01b036104bb6107c7565b1660005260006020526020604060002054604051908152f35b3461018c57602036600319011261018c576104ee336107f3565b6103d4600435336108ad565b3461018c57604036600319011261018c576105136107c7565b61051b610884565b6001600160a01b03811615610537576103d49060243590610a44565b63ec442f0560e01b600052600060045260246000fd5b3461018c57600036600319011261018c57602060ff60055460a01c16604051908152f35b3461018c57606036600319011261018c5761058a6107c7565b6105926107dd565b6044359061059f336107f3565b6001600160a01b038316600081815260016020908152604080832033845290915290205490939060001981106105db575b5061021193506109ab565b83811061064a57841561063457331561061e57610211946000526001602052604060002060018060a01b03331660005260205283604060002091039055846105d0565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b3461018c57600036600319011261018c576020600254604051908152f35b3461018c57604036600319011261018c576102116106a16107c7565b6024359033610944565b3461018c57600036600319011261018c5760006003548060011c90600181168015610774575b60208310811461031f57828552908115610303575060011461071d5750819003601f01601f191681019067ffffffffffffffff821181831017610296576102928291826040528261077e565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061075e57506020915082010182610262565b6001816020925483858801015201910190610749565b91607f16916106d1565b91909160208152825180602083015260005b8181106107b1575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610790565b600435906001600160a01b038216820361018c57565b602435906001600160a01b038216820361018c57565b6001600160a01b03811660008181526006602052604090205490919060ff161561081b575050565b8160005260066020526040600020600160ff1982541617905581156105375769021e19e0c9bab240000061084e91610a44565b7f36e8302bcc77b8fe43af2446f74096ec8d3518389ad18f4c8a4c801492f18b42602060405169021e19e0c9bab24000008152a2565b6005546001600160a01b0316330361089857565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b0316801561092e5760009181835282602052604083205481811061091557817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6001600160a01b0316908115610634576001600160a01b031691821561061e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b6001600160a01b031690811561092e576001600160a01b0316918215610537576000828152806020526040812054828110610a2a5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b600254908282018092116103d6576002919091556001600160a01b0316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060209084610aa15780600254036002555b604051908152a3565b84845283825260408420818154019055610a9856fea2646970667358221220995a6b1b61fde40becd932bb6db1567d2fd96a4a6dbccbecd7d9d7f062a0451764736f6c634300081c0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "417:3905:10:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;417:3905:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;417:3905:10;;;;1648:13:2;417:3905:10;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;;1648:13:2;417:3905:10;;;;;1648:13:2;417:3905:10;;;;-1:-1:-1;;;;;417:3905:10;;;;1671:17:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;;1648:13:2;417:3905:10;;;;;1671:17:2;417:3905:10;;826:10;1273:26:0;1269:95;;3004:6;417:3905:10;;826:10;-1:-1:-1;;;;;417:3905:10;;3052:40:0;-1:-1:-1;;3052:40:0;-1:-1:-1;;;;;;417:3905:10;;;826:10;-1:-1:-1;;;;417:3905:10;;;;;;;-1:-1:-1;;;417:3905:10;;3004:6:0;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6214:21:2;417:3905:10;;;;;;;;;6214:21:2;417:3905:10;826:10;;-1:-1:-1;417:3905:10;-1:-1:-1;417:3905:10;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;-1:-1:-1;7064:25:2;417:3905:10;826:10;7064:25:2;;417:3905:10;;;;;;;;;;-1:-1:-1;;;417:3905:10;;;1671:17:2;417:3905:10;;;;;;;;-1:-1:-1;417:3905:10;;1671:17:2;417:3905:10;;-1:-1:-1;417:3905:10;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1671:17:2;417:3905:10;;-1:-1:-1;1322:31:0;417:3905:10;;;;-1:-1:-1;417:3905:10;;;;;;;;;;1671:17:2;-1:-1:-1;417:3905:10;;-1:-1:-1;417:3905:10;;-1:-1:-1;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;1671:17:2;417:3905:10;;;;;;;;;;1648:13:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:2;-1:-1:-1;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;-1:-1:-1;417:3905:10;;1671:17:2;417:3905:10;;-1:-1:-1;417:3905:10;;;;;;;;;;;;-1:-1:-1;417:3905:10;;1671:17:2;417:3905:10;;-1:-1:-1;417:3905:10;;;;;-1:-1:-1;417:3905:10;;;;;1648:13:2;-1:-1:-1;417:3905:10;;;;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;417:3905:10;;;;;;;;;;1648:13:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;417:3905:10;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;-1:-1:-1;417:3905:10;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;-1:-1:-1;;417:3905:10;;;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;417:3905:10;;;;;;;;-1:-1:-1;;417:3905:10;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;;;;-1:-1:-1;417:3905:10;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "417:3905:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;417:3905:10;4032:22;;417:3905;;3004:6:0;417:3905:10;;-1:-1:-1;;;;;;417:3905:10;;;;;;;-1:-1:-1;;;;;417:3905:10;3052:40:0;-1:-1:-1;;3052:40:0;417:3905:10;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;3440:5:2;417:3905:10;;:::i;:::-;3132:10;;;:::i;:::-;417:3905;;3132:10;;3440:5:2;:::i;:::-;417:3905:10;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;-1:-1:-1;;417:3905:10;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;1710:6:0;417:3905:10;;;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;;;:::i;:::-;;;2430:10;;;:::i;:::-;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;;;;;;2430:10;417:3905;;;;;;;;;2575:26;;;417:3905;;;;;;;;;;8823:4:2;2754:6:10;2430:10;;8823:4:2;;:::i;:::-;2754:6:10;:::i;:::-;417:3905;;;;;;;;;;;;;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;417:3905:10;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;1500:62:0;;:::i;:::-;3004:6;417:3905:10;;-1:-1:-1;;;;;;417:3905:10;;;;;;;-1:-1:-1;;;;;417:3905:10;3052:40:0;417:3905:10;;3052:40:0;417:3905:10;;;;;;;-1:-1:-1;;417:3905:10;;;;-1:-1:-1;;;;;417:3905:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;2044:10;;;:::i;:::-;2120:6;417:3905;;2044:10;2120:6;:::i;417:3905::-;;;;;;-1:-1:-1;;417:3905:10;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;417:3905:10;;7509:21:2;7505:91;;7634:5;417:3905:10;;;7634:5:2;;:::i;7505:91::-;7553:32;;;417:3905:10;7553:32:2;417:3905:10;;;;;7553:32:2;417:3905:10;;;;;;-1:-1:-1;;417:3905:10;;;;;;1129:9;417:3905;;;;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;;;:::i;:::-;;;:::i;:::-;;;3692:10;;;;:::i;:::-;-1:-1:-1;;;;;417:3905:10;;;;;;;;;;;;;;;3692:10;417:3905;;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;417:3905:10;4967:5:2;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;3692:10:10;9892:21:2;9888:90;;4967:5;417:3905:10;;;;;;;;;;;;;;3692:10;417:3905;-1:-1:-1;417:3905:10;;;;;-1:-1:-1;417:3905:10;;;;;10557:309:2;;;9888:90;9936:31;;;417:3905:10;9936:31:2;417:3905:10;;;;;9936:31:2;9790:89;9836:32;;;417:3905:10;9836:32:2;417:3905:10;;;;;9836:32:2;10613:130;10668:60;;;;;417:3905:10;10668:60:2;3692:10:10;417:3905;;;;;;;;10668:60:2;417:3905:10;;;;;;-1:-1:-1;;417:3905:10;;;;;2908:12:2;417:3905:10;;;;;;;;;;;;;-1:-1:-1;;417:3905:10;;;;8823:4:2;417:3905:10;;:::i;:::-;;;735:10:5;;8823:4:2;:::i;417:3905:10:-;;;;;;-1:-1:-1;;417:3905:10;;;;;1837:5:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;417:3905:10;;;;;-1:-1:-1;;417:3905:10;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;417:3905:10;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;417:3905:10;;;;;;:::o;1555:284::-;-1:-1:-1;;;;;417:3905:10;;-1:-1:-1;417:3905:10;;;1621:24;417:3905;;;;;;;;;;;1620:31;1616:216;;1555:284;;:::o;1616:216::-;417:3905;-1:-1:-1;417:3905:10;1621:24;417:3905;;;-1:-1:-1;417:3905:10;1701:4;417:3905;;;;;;;;7509:21:2;;7505:91;;612:16:10;7634:5:2;;;:::i;:::-;1773:47:10;417:3905;;;612:16;417:3905;;1773:47;1555:284::o;1796:162:0:-;1710:6;417:3905:10;-1:-1:-1;;;;;417:3905:10;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:5;1901:40:0;417:3905:10;;-1:-1:-1;1901:40:0;7965:206:2;-1:-1:-1;;;;;417:3905:10;8035:21:2;;8031:89;;8054:1;417:3905:10;;;;;;;;;;;6321:19:2;;;6317:115;;417:3905:10;7064:25:2;417:3905:10;;;;;;;;;;;;;;;6791:21:2;417:3905:10;;6791:21:2;417:3905:10;;;;;;7064:25:2;7965:206::o;6317:115::-;417:3905:10;6367:50:2;;;;;;;;417:3905:10;;;;;6367:50:2;8031:89;8079:30;;;8054:1;8079:30;8054:1;8079:30;417:3905:10;;8054:1:2;8079:30;9682:432;-1:-1:-1;;;;;417:3905:10;;9794:19:2;;9790:89;;-1:-1:-1;;;;;417:3905:10;;9892:21:2;;9888:90;;417:3905:10;10066:31:2;417:3905:10;;9811:1:2;417:3905:10;8823:4:2;417:3905:10;;;9811:1:2;417:3905:10;;-1:-1:-1;417:3905:10;;;;;-1:-1:-1;417:3905:10;;;;;;;10066:31:2;9682:432::o;5374:300::-;-1:-1:-1;;;;;417:3905:10;;5457:18:2;;5453:86;;-1:-1:-1;;;;;417:3905:10;;5552:16:2;;5548:86;;5473:1;417:3905:10;;;;;;;;;;6321:19:2;;;6317:115;;417:3905:10;;;;7064:25:2;417:3905:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:2;5374:300::o;6317:115::-;6367:50;417:3905:10;6367:50:2;;;;;;;;417:3905:10;;;;;6367:50:2;5989:1107;6214:21;417:3905:10;;;;;;;;;;6214:21:2;417:3905:10;;;;-1:-1:-1;;;;;417:3905:10;;;;7064:25:2;;417:3905:10;;6628:16:2;417:3905:10;;;6214:21:2;417:3905:10;;6214:21:2;417:3905:10;6624:425:2;417:3905:10;;;;;7064:25:2;5989:1107::o;6624:425::-;417:3905:10;;;;;;;;;;;;;;;6624:425:2;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title SimpleStakingToken\r\n * @dev A simple ERC20 token for testing and development purposes\r\n * This token can be minted by the owner and used as a staking token\r\n * Automatically mints tokens to users on their first interaction\r\n */\r\ncontract SimpleStakingToken is ERC20, Ownable {\r\n    uint8 private _decimals;\r\n    mapping(address => bool) private hasReceivedInitialTokens;\r\n    uint256 private constant INITIAL_TOKEN_AMOUNT = 10000 * 10 ** 18; // 10,000 tokens in wei\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint8 decimals_,\r\n        uint256 initialSupply\r\n    ) ERC20(name, symbol) Ownable(msg.sender) {\r\n        _decimals = decimals_;\r\n        _mint(msg.sender, initialSupply * 10 ** decimals_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints tokens to a specified address (only owner)\r\n     * @param to The address to mint tokens to\r\n     * @param amount The amount of tokens to mint (in wei)\r\n     */\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Automatically mints initial tokens to the caller if they haven't received them\r\n     */\r\n    function _mintInitialTokens(address user) private {\r\n        if (!hasReceivedInitialTokens[user]) {\r\n            hasReceivedInitialTokens[user] = true;\r\n            _mint(user, INITIAL_TOKEN_AMOUNT);\r\n            emit InitialTokensMinted(user, INITIAL_TOKEN_AMOUNT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Burns tokens from the caller's balance\r\n     * @param amount The amount of tokens to burn (in wei)\r\n     */\r\n    function burn(uint256 amount) public {\r\n        _mintInitialTokens(msg.sender); // Mint tokens on first interaction\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns tokens from a specified address (requires allowance)\r\n     * @param from The address to burn tokens from\r\n     * @param amount The amount of tokens to burn (in wei)\r\n     */\r\n    function burnFrom(address from, uint256 amount) public {\r\n        _mintInitialTokens(msg.sender); // Mint tokens on first interaction\r\n        uint256 currentAllowance = allowance(from, msg.sender);\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: burn amount exceeds allowance\"\r\n        );\r\n\r\n        _approve(from, msg.sender, currentAllowance - amount);\r\n        _burn(from, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides ERC20 transfer to include automatic minting\r\n     * @param recipient The address to transfer tokens to\r\n     * @param amount The amount of tokens to transfer (in wei)\r\n     */\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _mintInitialTokens(msg.sender); // Mint tokens on first interaction\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides ERC20 transferFrom to include automatic minting\r\n     * @param sender The address to transfer tokens from\r\n     * @param recipient The address to transfer tokens to\r\n     * @param amount The amount of tokens to transfer (in wei)\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _mintInitialTokens(msg.sender); // Mint tokens on first interaction\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the owner to transfer ownership of the contract\r\n     */\r\n    function transferOwnership(\r\n        address newOwner\r\n    ) public virtual override onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when initial tokens are minted to a user\r\n     */\r\n    event InitialTokensMinted(address indexed user, uint256 amount);\r\n}\r\n",
  "sourcePath": "C:\\Users\\ANMOL\\OneDrive\\Desktop\\AMAZON HACKON\\Ageis-Blockchain\\truffle-project\\contracts\\SimpleStakingToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/SimpleStakingToken.sol",
    "exportedSymbols": {
      "Context": [
        933
      ],
      "ERC20": [
        799
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        903
      ],
      "Ownable": [
        147
      ],
      "SimpleStakingToken": [
        3924
      ]
    },
    "id": 3925,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3673,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3674,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3925,
        "sourceUnit": 800,
        "src": "60:55:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3675,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3925,
        "sourceUnit": 148,
        "src": "117:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3677,
              "name": "ERC20",
              "nameLocations": [
                "448:5:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 799,
              "src": "448:5:10"
            },
            "id": 3678,
            "nodeType": "InheritanceSpecifier",
            "src": "448:5:10"
          },
          {
            "baseName": {
              "id": 3679,
              "name": "Ownable",
              "nameLocations": [
                "455:7:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "455:7:10"
            },
            "id": 3680,
            "nodeType": "InheritanceSpecifier",
            "src": "455:7:10"
          }
        ],
        "canonicalName": "SimpleStakingToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3676,
          "nodeType": "StructuredDocumentation",
          "src": "173:242:10",
          "text": " @title SimpleStakingToken\n @dev A simple ERC20 token for testing and development purposes\n This token can be minted by the owner and used as a staking token\n Automatically mints tokens to users on their first interaction"
        },
        "fullyImplemented": true,
        "id": 3924,
        "linearizedBaseContracts": [
          3924,
          147,
          799,
          189,
          903,
          877,
          933
        ],
        "name": "SimpleStakingToken",
        "nameLocation": "426:18:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3682,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "484:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 3924,
            "src": "470:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3681,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "470:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3686,
            "mutability": "mutable",
            "name": "hasReceivedInitialTokens",
            "nameLocation": "533:24:10",
            "nodeType": "VariableDeclaration",
            "scope": 3924,
            "src": "500:57:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3685,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3683,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "508:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "500:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3684,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "519:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 3693,
            "mutability": "constant",
            "name": "INITIAL_TOKEN_AMOUNT",
            "nameLocation": "589:20:10",
            "nodeType": "VariableDeclaration",
            "scope": 3924,
            "src": "564:64:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3687,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "id": 3692,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130303030",
                "id": 3688,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "612:5:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 3691,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 3689,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "620:2:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 3690,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "626:2:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "620:8:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "612:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3726,
              "nodeType": "Block",
              "src": "838:101:10",
              "statements": [
                {
                  "expression": {
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3712,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3682,
                      "src": "849:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3713,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3699,
                      "src": "861:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "849:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3715,
                  "nodeType": "ExpressionStatement",
                  "src": "849:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3717,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "887:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "891:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "887:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3719,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3701,
                          "src": "899:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 3720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "915:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 3721,
                            "name": "decimals_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3699,
                            "src": "921:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "915:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "899:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3716,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "881:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "881:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3725,
                  "nodeType": "ExpressionStatement",
                  "src": "881:50:10"
                }
              ]
            },
            "id": 3727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3704,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3695,
                    "src": "804:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3705,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3697,
                    "src": "810:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3706,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3703,
                  "name": "ERC20",
                  "nameLocations": [
                    "798:5:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 799,
                  "src": "798:5:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "798:19:10"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3708,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "826:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "830:6:10",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "826:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3710,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3707,
                  "name": "Ownable",
                  "nameLocations": [
                    "818:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "818:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "818:19:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3695,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "697:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3727,
                  "src": "683:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3694,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3697,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "726:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3727,
                  "src": "712:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3699,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "749:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3727,
                  "src": "743:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3698,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3701,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "777:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3727,
                  "src": "769:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "672:125:10"
            },
            "returnParameters": {
              "id": 3711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:10"
            },
            "scope": 3924,
            "src": "661:278:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              363
            ],
            "body": {
              "id": 3736,
              "nodeType": "Block",
              "src": "1111:35:10",
              "statements": [
                {
                  "expression": {
                    "id": 3734,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3682,
                    "src": "1129:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 3733,
                  "id": 3735,
                  "nodeType": "Return",
                  "src": "1122:16:10"
                }
              ]
            },
            "documentation": {
              "id": 3728,
              "nodeType": "StructuredDocumentation",
              "src": "947:93:10",
              "text": " @dev Returns the number of decimals used to get its user representation."
            },
            "functionSelector": "313ce567",
            "id": 3737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1055:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3730,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1086:8:10"
            },
            "parameters": {
              "id": 3729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:2:10"
            },
            "returnParameters": {
              "id": 3733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "1104:5:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3731,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:7:10"
            },
            "scope": 3924,
            "src": "1046:100:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3752,
              "nodeType": "Block",
              "src": "1401:36:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3748,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "1418:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3749,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3742,
                        "src": "1422:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3747,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "1412:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:17:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3751,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:17:10"
                }
              ]
            },
            "documentation": {
              "id": 3738,
              "nodeType": "StructuredDocumentation",
              "src": "1154:182:10",
              "text": " @dev Mints tokens to a specified address (only owner)\n @param to The address to mint tokens to\n @param amount The amount of tokens to mint (in wei)"
            },
            "functionSelector": "40c10f19",
            "id": 3753,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3745,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3744,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1391:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1391:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1391:9:10"
              }
            ],
            "name": "mint",
            "nameLocation": "1351:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3740,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1364:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3753,
                  "src": "1356:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3742,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1376:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3753,
                  "src": "1368:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:28:10"
            },
            "returnParameters": {
              "id": 3746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:10"
            },
            "scope": 3924,
            "src": "1342:95:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3781,
              "nodeType": "Block",
              "src": "1605:234:10",
              "statements": [
                {
                  "condition": {
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1620:31:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3759,
                        "name": "hasReceivedInitialTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3686,
                        "src": "1621:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3761,
                      "indexExpression": {
                        "id": 3760,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3756,
                        "src": "1646:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1621:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3780,
                  "nodeType": "IfStatement",
                  "src": "1616:216:10",
                  "trueBody": {
                    "id": 3779,
                    "nodeType": "Block",
                    "src": "1653:179:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3763,
                              "name": "hasReceivedInitialTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3686,
                              "src": "1668:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 3765,
                            "indexExpression": {
                              "id": 3764,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3756,
                              "src": "1693:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1668:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1701:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1668:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3768,
                        "nodeType": "ExpressionStatement",
                        "src": "1668:37:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3770,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3756,
                              "src": "1726:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3771,
                              "name": "INITIAL_TOKEN_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3693,
                              "src": "1732:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3769,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "1720:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1720:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3773,
                        "nodeType": "ExpressionStatement",
                        "src": "1720:33:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3775,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3756,
                              "src": "1793:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3776,
                              "name": "INITIAL_TOKEN_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3693,
                              "src": "1799:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3774,
                            "name": "InitialTokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "1773:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1773:47:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3778,
                        "nodeType": "EmitStatement",
                        "src": "1768:52:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3754,
              "nodeType": "StructuredDocumentation",
              "src": "1445:104:10",
              "text": " @dev Automatically mints initial tokens to the caller if they haven't received them"
            },
            "id": 3782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintInitialTokens",
            "nameLocation": "1564:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3756,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1591:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3782,
                  "src": "1583:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:14:10"
            },
            "returnParameters": {
              "id": 3758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:10"
            },
            "scope": 3924,
            "src": "1555:284:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3799,
              "nodeType": "Block",
              "src": "2014:121:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3789,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2044:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2048:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3788,
                      "name": "_mintInitialTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3782,
                      "src": "2025:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3792,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3794,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2108:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2112:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2108:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3796,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3785,
                        "src": "2120:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3793,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "2102:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3798,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:25:10"
                }
              ]
            },
            "documentation": {
              "id": 3783,
              "nodeType": "StructuredDocumentation",
              "src": "1847:124:10",
              "text": " @dev Burns tokens from the caller's balance\n @param amount The amount of tokens to burn (in wei)"
            },
            "functionSelector": "42966c68",
            "id": 3800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1986:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3785,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1999:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3800,
                  "src": "1991:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:16:10"
            },
            "returnParameters": {
              "id": 3787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2014:0:10"
            },
            "scope": 3924,
            "src": "1977:158:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3842,
              "nodeType": "Block",
              "src": "2400:369:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3809,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2430:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2434:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2430:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3808,
                      "name": "_mintInitialTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3782,
                      "src": "2411:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3812,
                  "nodeType": "ExpressionStatement",
                  "src": "2411:30:10"
                },
                {
                  "assignments": [
                    3814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3814,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "2496:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 3842,
                      "src": "2488:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3813,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2488:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3820,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3816,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3803,
                        "src": "2525:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3817,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2531:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2535:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2531:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3815,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "2515:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 3819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2515:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2488:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3822,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3814,
                          "src": "2575:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3823,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3805,
                          "src": "2595:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2575:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 3825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2616:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                          "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                        },
                        "value": "ERC20: burn amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
                          "typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
                        }
                      ],
                      "id": 3821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2553:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:112:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3827,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:112:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3829,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3803,
                        "src": "2687:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2693:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2697:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2693:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3832,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3814,
                          "src": "2705:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 3833,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3805,
                          "src": "2724:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2705:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3828,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        690,
                        750
                      ],
                      "referencedDeclaration": 690,
                      "src": "2678:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:53:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3836,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:53:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3838,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3803,
                        "src": "2748:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3839,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3805,
                        "src": "2754:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3837,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "2742:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3841,
                  "nodeType": "ExpressionStatement",
                  "src": "2742:19:10"
                }
              ]
            },
            "documentation": {
              "id": 3801,
              "nodeType": "StructuredDocumentation",
              "src": "2143:196:10",
              "text": " @dev Burns tokens from a specified address (requires allowance)\n @param from The address to burn tokens from\n @param amount The amount of tokens to burn (in wei)"
            },
            "functionSelector": "79cc6790",
            "id": 3843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "2354:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3803,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2371:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "2363:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3805,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2385:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3843,
                  "src": "2377:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:30:10"
            },
            "returnParameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2400:0:10"
            },
            "scope": 3924,
            "src": "2345:424:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              409
            ],
            "body": {
              "id": 3865,
              "nodeType": "Block",
              "src": "3102:136:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3132:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3136:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3132:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3854,
                      "name": "_mintInitialTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3782,
                      "src": "3113:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3113:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3858,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3861,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3846,
                        "src": "3212:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3862,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3848,
                        "src": "3223:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3859,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3197:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SimpleStakingToken_$3924_$",
                          "typeString": "type(contract super SimpleStakingToken)"
                        }
                      },
                      "id": 3860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3203:8:10",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "3197:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3853,
                  "id": 3864,
                  "nodeType": "Return",
                  "src": "3190:40:10"
                }
              ]
            },
            "documentation": {
              "id": 3844,
              "nodeType": "StructuredDocumentation",
              "src": "2777:202:10",
              "text": " @dev Overrides ERC20 transfer to include automatic minting\n @param recipient The address to transfer tokens to\n @param amount The amount of tokens to transfer (in wei)"
            },
            "functionSelector": "a9059cbb",
            "id": 3866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2994:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3850,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3078:8:10"
            },
            "parameters": {
              "id": 3849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3846,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3021:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3866,
                  "src": "3013:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3848,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3049:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3866,
                  "src": "3041:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3002:60:10"
            },
            "returnParameters": {
              "id": 3853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3866,
                  "src": "3096:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3096:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3095:6:10"
            },
            "scope": 3924,
            "src": "2985:253:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              482
            ],
            "body": {
              "id": 3891,
              "nodeType": "Block",
              "src": "3662:148:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3880,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3692:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3696:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3692:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3879,
                      "name": "_mintInitialTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3782,
                      "src": "3673:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3673:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "3673:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3886,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3869,
                        "src": "3776:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3887,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3871,
                        "src": "3784:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3888,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3873,
                        "src": "3795:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3884,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3757:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SimpleStakingToken_$3924_$",
                          "typeString": "type(contract super SimpleStakingToken)"
                        }
                      },
                      "id": 3885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3763:12:10",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 482,
                      "src": "3757:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3878,
                  "id": 3890,
                  "nodeType": "Return",
                  "src": "3750:52:10"
                }
              ]
            },
            "documentation": {
              "id": 3867,
              "nodeType": "StructuredDocumentation",
              "src": "3246:264:10",
              "text": " @dev Overrides ERC20 transferFrom to include automatic minting\n @param sender The address to transfer tokens from\n @param recipient The address to transfer tokens to\n @param amount The amount of tokens to transfer (in wei)"
            },
            "functionSelector": "23b872dd",
            "id": 3892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3525:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3875,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3638:8:10"
            },
            "parameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3869,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3556:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3892,
                  "src": "3548:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3871,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3581:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3892,
                  "src": "3573:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3609:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3892,
                  "src": "3601:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3601:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3537:85:10"
            },
            "returnParameters": {
              "id": 3878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3892,
                  "src": "3656:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:6:10"
            },
            "scope": 3924,
            "src": "3516:294:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              126
            ],
            "body": {
              "id": 3915,
              "nodeType": "Block",
              "src": "3999:168:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3902,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3895,
                          "src": "4032:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4052:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4044:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3903,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4044:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4044:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4032:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 3908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4069:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 3901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4010:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3910,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:110:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3912,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3895,
                        "src": "4150:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3911,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "4131:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3914,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:28:10"
                }
              ]
            },
            "documentation": {
              "id": 3893,
              "nodeType": "StructuredDocumentation",
              "src": "3818:80:10",
              "text": " @dev Allows the owner to transfer ownership of the contract"
            },
            "functionSelector": "f2fde38b",
            "id": 3916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3899,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3898,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3989:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3989:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3989:9:10"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "3913:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3897,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3980:8:10"
            },
            "parameters": {
              "id": 3896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3895,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "3949:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3916,
                  "src": "3941:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:34:10"
            },
            "returnParameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3999:0:10"
            },
            "scope": 3924,
            "src": "3904:263:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3917,
              "nodeType": "StructuredDocumentation",
              "src": "4175:74:10",
              "text": " @dev Emitted when initial tokens are minted to a user"
            },
            "eventSelector": "36e8302bcc77b8fe43af2446f74096ec8d3518389ad18f4c8a4c801492f18b42",
            "id": 3923,
            "name": "InitialTokensMinted",
            "nameLocation": "4261:19:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3919,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4297:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3923,
                  "src": "4281:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3921,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4311:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3923,
                  "src": "4303:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4280:38:10"
            },
            "src": "4255:64:10"
          }
        ],
        "scope": 3925,
        "src": "417:3905:10",
        "usedErrors": [
          13,
          18,
          159,
          164,
          169,
          178,
          183,
          188
        ],
        "usedEvents": [
          24,
          811,
          820,
          3923
        ]
      }
    ],
    "src": "33:4291:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.28+commit.7893614a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x36e8302bcc77b8fe43af2446f74096ec8d3518389ad18f4c8a4c801492f18b42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "InitialTokensMinted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x833DA43A2b9DEcdc3b83d3bA6D22D04Aa25a7EB2",
      "transactionHash": "0x0918fecaa9248307c995fc10452a86b059af7a42a3d00a40b0ada3765f95fc78"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-06-22T12:49:50.531Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "A simple ERC20 token for testing and development purposes This token can be minted by the owner and used as a staking token Automatically mints tokens to users on their first interaction",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "InitialTokensMinted(address,uint256)": {
        "details": "Emitted when initial tokens are minted to a user"
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns tokens from the caller's balance",
        "params": {
          "amount": "The amount of tokens to burn (in wei)"
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns tokens from a specified address (requires allowance)",
        "params": {
          "amount": "The amount of tokens to burn (in wei)",
          "from": "The address to burn tokens from"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation."
      },
      "mint(address,uint256)": {
        "details": "Mints tokens to a specified address (only owner)",
        "params": {
          "amount": "The amount of tokens to mint (in wei)",
          "to": "The address to mint tokens to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Overrides ERC20 transfer to include automatic minting",
        "params": {
          "amount": "The amount of tokens to transfer (in wei)",
          "recipient": "The address to transfer tokens to"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Overrides ERC20 transferFrom to include automatic minting",
        "params": {
          "amount": "The amount of tokens to transfer (in wei)",
          "recipient": "The address to transfer tokens to",
          "sender": "The address to transfer tokens from"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the owner to transfer ownership of the contract"
      }
    },
    "title": "SimpleStakingToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}